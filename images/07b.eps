%!PS-Adobe-3.0 EPSF-3.0%%Title: Fig7a&b%%Creator: PageMaker 6.5%%CreationDate:  3-2-2001, 11:59:40%%For: Daily Info%%BoundingBox: 0 0 382 595%%ALDBoundingBox: 0 0 382.7 595.3%%DocumentNeededResources: (atend)%%DocumentSuppliedResources: (atend)%%CMYKCustomColor: (atend)%%DocumentCustomColors: (atend)%%DocumentProcessColors: (atend)%ADBDocumentInks: (atend)%ADBDocumentMultiInkColors: (atend)%ALDOriginalFile: G3 PowerMac:Desktop Folder:Work:BFA Rules:BFA Rules UK 2000:Graphics/2000:07A&B:Fig7a&b%%EndComments%%BeginProlog%%BeginResource: procset P65PS_PS 1.0 1%%Copyright: Copyright (C) 1996 Adobe Systems, Inc.  All Rights Reserved.%%Version: 1.0 1 %%%/setpacking where{pop currentpacking true setpacking}if userdict/P65PS 454dict dup begin userdict/P65PS known{/$MetalHead P65PS def}{/$MetalHeadcurrentdict def}ifelse/P65PS currentdict def put/bdef{bind def}bind def/xdef{exch def}bdef/ldef{load def}bdef/ndef{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdef/MakeReadOnlyArray{/packedarray where{pop packedarray}{array astore readonly}ifelse}bdef/T true def/F false def/q`65[currenttransfer]cvx def/PSScreen[currentscreen]cvx def/PSsetgray systemdict/setgray get def/_PSdef matrix def/_WCmtx matrix def/_LPmtx matrix def/bse^65{0 0 transformround exch round exch itransform translate}bdef/j`65{_PSdef currentmatrix pop}bdef/ps$65{gsave scale _WCmtx currentmatrix pop grestore scale}bdef/k`65{_LPmtx currentmatrix pop}bdef/l`65{_LPmtx setmatrix}bdef/m`65{{90 rotate pop 0exch neg translate}{-90 rotate neg 0 translate pop}ifelse}bdef/L2L65{1 dictbegin/PageSize[currentpagedevice/PageSize get aload pop exch]def currentdictend setpagedevice gsave 90 rotate neg 0 exch translate pop j`65 grestore}bdef/p`65{dup length 2 add array cvx dup 3 -1 roll 2 exch putinterval dup 0 4 -1roll put dup 1/exec load put}bdef/db65{exch dup length 2 add array cvx dup 3-1 roll 2 exch putinterval dup 0 4 -1 roll put dup 1/exec load put}bdef/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat systemdict/setrgbcolor get exec pop}ndef/setcustomcolor{1 index dup dup4 get(Red)eq 3 1 roll 4 get(Green)eq exch 4 get(Blue)eq or or not level2 and{exch[exch/Separation exch dup 4 get exch/DeviceCMYK exch 0 4 getinterval[exch/dup load exch cvx{mul exch dup}/forall load/pop load dup]cvx]setcolorspacesetcolor}{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ifelse}ndef/setprocesscolor{exch aload pop pop 4{4 index mul 4 1 roll}repeatsetcmykcolor pop}ndef/sethificolor{exch aload length 4 sub{pop}repeat 4{4index mul 4 1 roll}repeat setcmykcolor pop}ndef/findrgbcolor{4MakeReadOnlyArray}ndef/findlabcolor{6 MakeReadOnlyArray}ndef/finddefcolor{6MakeReadOnlyArray}ndef/finddefgcolor{7 MakeReadOnlyArray}ndef/findcmykcustomcolor{5 MakeReadOnlyArray}ndef/findcmykprocesscolor{5MakeReadOnlyArray}ndef/findhificolor{exch dup dup 4 2 roll 2 mul 7 add 2 rollmark exch 2 mul 7 add 1 roll{1 index type/stringtype ne{exit}if 2MakeReadOnlyArray counttomark 1 add 1 roll counttomark 3 add mark exch 1 rollcounttomark 1 add -1 roll pop}loop counttomark 1 add 4 roll counttomark 1 add-1 roll pop exch 5 add MakeReadOnlyArray}ndef/newcmykcustomcolor{6MakeReadOnlyArray}ndef/setoverprint{pop}ndef/currentoverprint{false}ndef/setseparationgray{level2{[/Separation(All)/DeviceGray{1 exch sub}]setcolorspace 1 exch sub setcolor}{PSsetgray}ifelse}ndef/colorexists false def/proc1 null def/proc2 null def/newproc null def/level2/languagelevel where{poplanguagelevel 1 ne}{false}ifelse def/v2`65{/colorexists xdef}def/j2`65{setcustomcolor}bdef/setpaintrgbcolor{exch aload pop pop 4 -1 roll 3{dup dup 6-1 roll mul exch sub 1 add exch}repeat pop setrgbcolor}bdef/setpaintdefcolor{exch aload pop pop 5 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop _curcolorspace}ifelse setcolorspace 4 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4 -1 roll 3{dup dup 6 -1roll mul exch sub 1 add exch}repeat pop setcolor}bdef/setpaintlabcolor{exchaload pop pop 5 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop_curcolorspace}ifelse setcolorspace 4 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4 -1 roll 1 exch sub dup 4index 100 exch sub mul 5 -1 roll add 4 1 roll dup 3 index 0 exch sub mul 4 -1roll add 3 1 roll 1 index 0 exch sub mul add setcolor}bdef/setpaintdefgcolor{exch aload pop pop 6 -1 roll dup type/arraytype eq{dup/_curcolorspace xdef}{pop _curcolorspace}ifelse setcolorspace 5 -1 roll dup _curcolorintent eq{pop}{dup/_curcolorintent xdef SetColorRendering}ifelse 4{4 index mul 4 1 roll}repeat setcolor pop}bdef/k2`65{setprocesscolor}bdef/y2`65{sethificolor}bdef/l2`65{F setoverprint 1 exch sub setseparationgray pop}bdef/m2`65{pop pop}bdef/n2`65{null eq{pop pop/m2`65 load def false def}{null eq{pop/l2`65 load def}{dup _process eq{pop/k2`65 load def}{dup _spot eq{pop/j2`65 load def}{dup _rgbeq{pop/setpaintrgbcolor load def}{dup _lab eq{pop/setpaintlabcolor load def}{dup _def eq{pop/setpaintdefcolor load def}{_defg eq{/setpaintdefgcolor loaddef}{/y2`65 load def}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse true def}ifelse}bdef/r365{dup _process eq{pop findcmykprocesscolor}{dup _spot eq{popfindcmykcustomcolor}{dup _rgb eq{pop findrgbcolor}{dup _lab eq{popfindlabcolor}{dup _def eq{pop finddefcolor}{_defg eq{finddefgcolor}{findhificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}bdef/SetColorRendering{systemdict/findcolorrendering known{systemdict/findcolorrendering get exec{/ColorRendering findresource systemdict/setcolorrendering get exec}{dup/DefaultColorRendering eq{pop}{/ColorRendering findresource dup == systemdict/setcolorrendering get exec}ifelse}ifelse}{pop}ifelse}bdef/_curcolorspace[]def/_curcolorintent null def/_ft null def/_fc null def/_f? false def/_fo falsedef/o2`65 null def/p2`65{}def/_fpat null def/_fpatn null def/_st null def/_scnull def/_s? false def/_so false def/q2`65 null def/r2`65{}def/Q`65 null def/P`65 null def/u2`65 null def/_trt null def/_trc null def/_tr? false def/hh`65/HonorPMTraps where{pop HonorPMTraps}{T}ifelse def/w2`65 null def/TrapStrokenull def/trMTX matrix def/_LBOmtx matrix def/_LBOgsave matrix def/_MLgsavematrix def/_x1 null def/_y1 null def/_x2 null def/_y2 null def/_rdp null def/_LLx null def/_LLy null def/_URx null def/_URy null def/_th null def/_hthknull def/_rd null def/_wp null def/_hp null def/_diam null def/_w null def/_hnull def/_dshlen null def/_rem null def/_spclen null def/_undo? false def/_dch(X)def/xfont null def/_ch null def/_spot 1 def/_process 2 def/_hifi 3 def/_paper 4 def/_registration 5 def/_rgb 6 def/_def 7 def/_defg 8 def/_lab 9 def/_ctype null def/_trctype null def/_mingray .00390625 def/@m65{moveto}bdef/@l65{lineto}bdef/@c65{curveto}bdef/@cp65{closepath}bdef/b`65{/_ctype xdef/_ftxdef dup null ne{_ctype r365}if/_fc xdef/_f?/o2`65 _ctype _fc _ft n2`65atlanta^65}bdef/atlanta^65{_f?{/p2`65{_fo setoverprint _fc _ft o2`65 _fpatnull eq{eofill}{_fpat j1`65}ifelse}def}{/p2`65{newpath}def}ifelse}bdef/c`65{/_fpatn xdef _fpatn null eq{/_fpat null def}{/_fpat _fpatn findfont def}ifelse}bdef/e`65{/_fo xdef}bdef/a`65{/_ctype xdef/_st xdef dup null ne{_ctype r365}if/_sc xdef/_s?/q2`65 _ctype _sc _st n2`65 seattle^65}bdef/seattle^65{_s?{/r2`65{_so setoverprint _sc _st q2`65 stroke}def/Q`65{_so setoverprint _sc _stq2`65 fill}def/P`65/Q`65 load def/u2`65{_so setoverprint _sc _st q2`65 show}def}{/r2`65{newpath}def/Q`65{newpath}def/P`65{newpath}def/u2`65{pop}def}ifelse}bdef/f`65{/_so xdef}bdef/h`65{/_trctype xdef/_trt xdef dup null ne{_trctyper365}if/_trc xdef/_tr?/w2`65 _trctype _trc _trt n2`65 lopez^65}bdef/lopez^65{_tr? hh`65 and{/x2`65{T setoverprint _trc _trt w2`65 stroke}def/TShowTrap{Tsetoverprint _trc _trt w2`65{currentlinewidth newpath 3 index 3 index_uPosition add 1 index 5 -1 roll add 1 index moveto lineto _uThicknesssetlinewidth strokepath setlinewidth stroke}{pop}ifelse newpath moveto/tsLSXxdef/tsWSX xdef/tsSTR(s)def gsave 0 0 moveto<20>show currentpoint pop/spwidxdef grestore{dup 32 eq{pop tsWSX spwid add 0.0 rmoveto}{currentpoint/oldyxdef/oldx xdef tsSTR 0 2 index put tsSTR false charpath currentpoint strokenewpath moveto pop}ifelse tsLSX 0 rmoveto}forall}def}{/x2`65{newpath}def/TShowTrap{7{pop}repeat}def}ifelse}bdef/@fp65{gsave p2`65 grestore}bdef/arct{arcto pop pop pop pop}ndef/EllipsePath{_LBOgsave currentmatrix pop translatescale 1 0 moveto 0 0 1 360 0 arcn closepath _LBOgsave setmatrix}bdef/RectPath{moveto 1 index 0 rlineto 0 exch rlineto neg 0 rlineto closepath}bdef/RoundRectPath{/_y2 xdef/_x2 xdef/_y1 xdef/_x1 xdef/_rdp xdef _x1 _y1 _rdp addmoveto _x1 _y2 _x2 _y2 _rdp arct _x2 _y2 _x2 _y1 _rdp arct _x2 _y1 _x1 _y1_rdp arct _x1 _y1 _x1 _y2 _rdp arct closepath}bdef/bell^65{{_LBOmtx astoreconcat}if}bdef/south^65{/_URy xdef/_URx xdef/_LLy xdef/_LLx xdef}bdef/lpd^65{_MLgsave currentmatrix pop gsave translate rotate}bdef/jp^65{grestore}bdef/jbd^65{gsave bell^65 moveto lineto setlinewidth r2`65 grestore}bdef/ald^65{gsave bell^65 samson^65 setlinewidth r2`65 grestore}bdef/ws^65{gsave bell^65xfont exch scalefont setfont F roswell^65 grestore}bdef/samson^65{translaterotate 0 0 moveto/_dshlen xdef/_rem xdef/_spclen xdef 1 1 3 -1 roll{pop_dshlen 0 rlineto _spclen _rem 0 gt{1 add/_rem _rem 1 sub def}if 0 rmoveto}for_dshlen 0 rlineto}bdef/roswell^65{gsave/_undo? xdef translate rotate _dch 0 3-1 roll put 0 moveto/_rem xdef/_spclen xdef 1 1 3 -1 roll{pop gsave _undo?{_LBOmtx setmatrix}if _dch u2`65 grestore _spclen _rem 0 gt{1 add/_rem _rem 1sub def}if 0 rmoveto}for _undo?{_LBOmtx setmatrix}if _dch u2`65 grestore}bdef/yy`65{gsave bell^65 newpath}bdef/yyq65{grestore}bdef/yy^65{/_ns xdef _ns{lineto}repeat}bdef/yQ65{/_th xdef 2 copy moveto lineto 1 setlinecap _thsetlinewidth r2`65}bdef/Qy65{dup setlinejoin 0 eq{setmiterlimit}if setlinecapsetlinewidth}bdef 8 dict begin/FontType 3 def/FontMatrix[.001 0 0 .001 0 0]def/FontBBox[-500 -500 500 500]def/Encoding 256 array def 0 1 255{Encoding exch/.nodef put}for Encoding 97/circle put/CharProcs 2 dict def CharProcs begin/.nodef{}def/circle{0 0 500 0 360 arc closepath fill}bind def end/BuildGlyph{1000 0 -500 -500 500 500 setcachedevice exch/CharProcs get exch 2 copy knownnot{pop/.nodef}if get exec}bind def/BuildChar{1 index/Encoding get exch get 1index/BuildGlyph get exec}bind def currentdict end/_xfont exch definefont/xfont exch def/_thumbStr 10 string def/_irad null def/_orad null def/_dx nulldef/_dy null def/_ld2 null def/_sz null def/_th null def/_lblsave null def/LFont null def/T`65{gsave 0.05 0.05 scale translate 2 copy 2 copy 8 -2 rolldup 3 -1 roll{neg}if exch RectPath .5 setseparationgray fill 0 0 RectPathgsave 1 setseparationgray fill grestore 0 setseparationgray 20 setlinewidthstroke/Helvetica findfont 180 scalefont setfont 100 add 100 exch moveto pop_thumbStr cvs show grestore}bdef/q3`65{_th _orad sub dup _dx _dy EllipsePathstroke _dx _ld2 sub _dy moveto _dx _ld2 add _dy lineto stroke _dx _dy _ld2 submoveto _dx _dy _ld2 add lineto stroke}bdef/V`65{/_irad xdef/_orad xdef/_dyxdef/_dx xdef/_th xdef/_ld2 xdef/_hthk 2.5 wcu^65 round dup 2 le{pop 2}if defgsave 0 setlinecap 1 setseparationgray _th _hthk 2 mul add setlinewidth q3`65_hthk _irad add dup _dx _dy EllipsePath fill 0 setseparationgray _thsetlinewidth q3`65 _irad dup _dx _dy EllipsePath fill 1 setseparationgray _dx_irad sub _dy moveto _dx _irad add _dy lineto stroke _dx _dy _irad sub moveto_dx _dy _irad add lineto stroke grestore}bdef/f1a`65{1 exch sub 0 0 0setcmykcolor}bdef/f1b`65{1 exch sub 0 exch 0 0 setcmykcolor}bdef/f1c`65{1 exchsub 0 0 3 -1 roll 0 setcmykcolor}bdef/f1d`65{1 exch sub 0 0 0 4 -1 rollsetcmykcolor}bdef/f1e`65{setseparationgray}bdef/W`65{gsave F setoverprint/_dyxdef/_dx xdef/_sz xdef/_th xdef _dx _dy translate{-90 rotate}if/XPaint exchldef 0.35 XPaint 11 _sz mul _sz 0 0 RectPath fill/_dx _th def/_sz _sz 2 _thmul sub def 0 1 10{10 div XPaint _sz dup _dx _th RectPath fill/_dx _dx _sz 2_th mul add add def}for grestore}bdef/calBarArray[0 0 1 0 0 1 0 0 1 0 0 0 1 10 0 1 0 1 0 0 1 1 0 0 0 0 1 0 0 .5 0 0 .5 0 0 .5 0 0 0 0 0 0 .5]def/X`65{gsave/_dy xdef/_dx xdef/_sz xdef/_th xdef _dx _dy translate{-90 rotate}if 0.35setseparationgray 11 _sz mul _sz 0 0 RectPath fill/_dx _th def/_sz _sz 2 _thmul sub def currentoverprint false setoverprint 0 1 10{calBarArray exch 4 mul4 getinterval aload pop setcmykcolor _sz dup _dx _th RectPath fill/_dx _dx _sz2 _th mul add add def}for setoverprint grestore}bdef/pw$65{gsave/_hthk 2.5wcu^65 round dup 2 le{pop 2}if def 5 copy 1 setseparationgray 0 setlinecapmoveto rlineto _hthk 2 mul add setlinewidth stroke 0 setseparationgray movetorlineto setlinewidth stroke grestore}bdef/Y`65{/_lblsave save def[exch 0 0 2index neg 0 0]LFont exch makefont setfont}bdef/a1`65{level2{[/Separation(All)/DeviceCMYK{dup dup dup}]setcolorspace 1 setcolor}{0 setseparationgray}ifelsemoveto show}bdef/a1a`65{level2{2 index(Cyan)eq{1 0 0 0 setcmykcolor}{2 index(\Magenta)eq{0 1 0 0 setcmykcolor}{2 index(Yellow)eq{0 0 1 0 setcmykcolor}{2index(Black)eq{0 0 0 1 setcmykcolor}{[/Separation 4 index/DeviceCMYK{dup dupdup}]setcolorspace 1 setcolor true setoverprint}ifelse}ifelse}ifelse}ifelsemoveto show}{3{pop}repeat}ifelse}bdef/Z`65{_lblsave restore}bdef/f1`65{/LFont/|_______Helvetica T/Helvetica aldus^65 def}bdef/_xbft null def/_xbfc null def/_xbx? F def/XPaint null def/XFill null def/XStroke null def/b1`65{gsavebell^65 south^65/_th xdef currentoverprint T setoverprint}bdef/d1`65{setoverprint grestore}bdef/c1`65{XBoxColor XBoxDraw}bdef/XBoxDraw{_URx _LLxsub abs _th sub _URy _LLy sub abs _th sub _LLx _th 2 div add _LLy _th 2 divadd 4 copy RectPath gsave XFill grestore _th setlinewidth XStroke 4 copymoveto rlineto exch 3 index add exch moveto exch neg exch rlineto XStroke}bdef/XBoxColor{/_ctype xdef/_xbft xdef dup null ne{_ctype r365}if/_xbfc xdef/_xbx?/XPaint _ctype _xbfc _xbft n2`65 psquare^65}bdef/psquare^65{_xbx?{/XFill{_xbfc0 XPaint fill}def/XStroke{_xbfc 1 XPaint stroke}def}{/XFill{newpath}def/XStroke{newpath}def}ifelse}bdef/e1`65{/__$jk where{pop/junk save def bell^65south^65/_th xdef _URx _LLx sub abs _th sub _URy _LLy sub abs _th sub _LLx _th2 div add _LLy _th 2 div add RectPath gsave .9 setseparationgray fill grestore0 setseparationgray _th setlinewidth stroke _LLx _LLy _URy add 2 div moveto/Helvetica findfont[180 180 J2`65 neg 0 0 3 -1 roll 0 0]makefont setfont showjunk restore}{{6{pop}repeat}if 6{pop}repeat}ifelse}bdef/s`65{gsave clippath 1setseparationgray fill grestore}bdef/r`65{PSScreen exch pop exch pop dup type/dicttype eq{dup/HalftoneType get 1 eq{begin/Angle exch def/Frequency exch def60 0 currentdict end}if}if}bdef/t`65{{1 exch sub}}bdef/PPDSetup{countdictstackmark}bdef/PPDCleanup{stopped cleartomark countdictstack exch sub dup 0 gt{{end}repeat}{pop}ifelse}bdef/AskFont{save/sv exch def/str(fonts/                \                                       )def/st2 128 string def st2 cvs dupFontDirectory exch known{pop(Y R)}{/filenameforall where{pop str exch st2 cvsdup length/len exch def 6 exch putinterval str 0 len 6 add getinterval markexch{}st2 filenameforall counttomark 0 gt{cleartomark(Y H)}{cleartomark(NnN)}ifelse}{pop(NnN)}ifelse}ifelse = flush sv restore}bdef/AskFreeVM{vmstatus exchsub == pop flush}bdef/AskSpooler{0 == flush}bdef/_PATgsave matrix def/_PATmtxmatrix def/gl^65{7 dict begin/FontDict 9 dict def FontDict begin/cache exchdef/key exch def/proc exch cvx def/mtx exch matrix invertmatrix def/heightexch def/width exch def/ctm matrix currentmatrix def/ptm matrix identmatrixdef/str(12345678901234567890123456789012)def end/FontBBox[0 0 FontDict/widthget FontDict/height get]def/FontMatrix FontDict/mtx get def/EncodingStandardEncoding def/FontType 3 def/BuildChar{pop begin FontDict begin width 0cache{0 0 width height setcachedevice}{setcharwidth}ifelse 0 0 moveto width 0lineto width height lineto 0 height lineto closepath clip newpath gsave procgrestore end end}def FontDict/key get currentdict definefont end}bdef/hj^65{dup type/dicttype eq{begin FontDict/ctm get setmatrix}{exch begin FontDict/ctmget setmatrix concat}ifelse currentdict setfont FontDict begin FontMatrixconcat width 0 dtransform round width div exch round width div exch 0 heightdtransform round height div exch round height div exch 0 0 transform roundexch round exch ptm astore setmatrix pathbbox height div ceiling height mul 41 roll width div ceiling width mul 4 1 roll height div floor height mul 4 1roll width div floor width mul 4 1 roll 2 index sub height div ceiling cviexch 3 index sub width div ceiling cvi exch 4 2 roll moveto FontMatrix ptminvertmatrix pop{gsave ptm concat dup str length idiv{str show}repeat dup strlength mod str exch 0 exch getinterval show grestore 0 height rmoveto}repeatpop end end}bdef/i1`65{gsave clip hj^65 grestore newpath}bdef/j1`65{gsave 0 00 0 setcmykcolor fill grestore i1`65}bdef/k1`65{_PATgsave currentmatrix pop_PATmtx defaultmatrix setmatrix rotate 3.36 3.36[1 0 0 -1 0 0]{2 setlinecap 01.68 moveto 1.68 0 lineto 1.68 3.36 moveto 3.36 1.68 lineto 0.675 setlinewidthstroke}/l1`65 true gl^65 pop 5.28 5.28[1 0 0 -1 0 0]{2 setlinecap 0 2.64moveto 2.64 0 lineto 2.64 5.28 moveto 5.28 2.64 lineto 0.675 setlinewidthstroke}/m1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap 0 1.92moveto 3.84 1.92 lineto 0.675 setlinewidth stroke}/n1`65 true gl^65 pop 7.687.68[1 0 0 -1 0 0]{2 setlinecap 0 3.84 moveto 7.68 3.84 lineto 0.675setlinewidth stroke}/o1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap1.92 0 moveto 1.92 3.84 lineto 0.675 setlinewidth stroke}/p1`65 true gl^65 pop7.68 7.68[1 0 0 -1 0 0]{2 setlinecap 3.84 0 moveto 3.84 7.68 lineto 0.675setlinewidth stroke}/q1`65 true gl^65 pop 3.84 3.84[1 0 0 -1 0 0]{2 setlinecap1.92 0 moveto 1.92 3.84 lineto 0 1.92 moveto 3.84 1.92 lineto 0.675setlinewidth stroke}/r1`65 true gl^65 pop 7.68 7.68[1 0 0 -1 0 0]{2 setlinecap3.84 0 moveto 3.84 7.68 lineto 0 3.84 moveto 7.68 3.84 lineto 0.675setlinewidth stroke}/s1`65 true gl^65 pop _PATgsave setmatrix}bdef/_OutlineSmearFrac 10 def/_OutlineWeight 0.012 def/_OutlineFillColorCMYK 0 0 01()findcmykprocesscolor def/_OutlineFillColorRGB 0 0 0()findrgbcolor def/_OutlineFillColorLab{[/CIEBasedABC 3 dict dup begin/RangeABC[0 1 0 1 0 1]def/RangeLMN[0 1 0 1 0 1]def/WhitePoint[1 1 1]def end]/Perceptual 0 0 0()findlabcolor}def/_ShadowReverseColorCMYK 0 0 0 1()findcmykprocesscolor def/_ShadowReverseColorRGB 0 0 0()findrgbcolor def/_ShadowReverseColorLab{[/CIEBasedABC 3 dict dup begin/RangeABC[0 1 0 1 0 1]def/RangeLMN[0 1 0 1 0 1]def/WhitePoint[1 1 1]def end]/Perceptual 0 0 0()findlabcolor}def/_BoldFactorX0.015 def/_BoldFactorY 0.015 def/_ShadowFactorX 0.06 def/_ShadowFactorY 0.06def/_ObliqueFactor -0.21 def/_ShadowTintFactor 0.2 def/_BFontUOThick 1 0/Helvetica findfont/FontMatrix get dtransform dup mul exch dup mul add sqrt_OutlineWeight mul def/_TXmtx matrix def/_TXctmx matrix def/_txgsave matrixdef/_BaseMatrix[1 0 0 -1 0 0]def/_ItalicMatrix[1 0 _ObliqueFactor 1 0 0]def/tempDict null def userdict/FCDict userdict put/isWinPS false def/_xSize 12def/_ySize 12 def/_dots 1440 def/_fDict null def/_uScale null def/_uPositionnull def/_uThickness null def/_uOThickness null def/_dUPosition -100 def/_dUThickness 50 def/_dFontScale -0.001 def/_runLen null def/_txc null def/_txt null def/_txo F def/_tx? F def/_ctc null def/_ctt null def/_cto F def/_cPaint null def/_outxc null def/_outxt null def/_outxo T def/_shdc null def/_shdt null def/_shdo T def/K2`65 null def/k3`65 null def/m3`65 null def/j3`65null def/l3`65 null def/FTextPaint null def/STextPaint null def/_gMTX matrixdef/macvec 256 array def macvec dup dup 0/Times-Roman findfont/Encoding get 0128 getinterval putinterval 39/quotesingle put 96/grave put/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft/guillemotright/ellipsis/blank/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron macvec128 128 getinterval astore pop/winvec 256 array def winvec dup dup 0/Times-Roman findfont/Encoding get 0 128 getinterval putinterval 39/quotesingle put 96/grave put/grave/acute/circumflex/tilde/macron/breve/dotaccent/dieresis/ring/cedilla/hungarumlaut/ogonek/caron/dotlessi winvec 014 getinterval astore pop/bullet/bullet/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/bullet/bullet/bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/bullet/bullet/Ydieresis/space/exclamdown/cent/sterling/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresiswinvec 127 129 getinterval astore pop/M1`65{{_TXmtx astore concat}if _TXctmxcurrentmatrix pop}bdef/N1`65{_txgsave currentmatrix pop}bdef/O1`65{_txgsavesetmatrix}bdef/NN2`65{_LBOgsave currentmatrix pop O1`65 gsave}bdef/NN3`65{eoclip newpath _LBOgsave setmatrix}bdef/P1`65{O1`65}bdef/Q1`65{_TXctmxsetmatrix}bdef/v1`65{userdict begin dict/FCDict exch def end}bdef/fontdef{FCDict 3 1 roll put}bdef/fontget{FCDict exch get}bdef/x1`65{aldus^65_BaseMatrix makefont fontdef}bdef/p3`65{dup length 1 add dict/tempDict exchdef{1 index/FID ne 2 index/UniqueID ne and{tempDict 3 1 roll put}{pop pop}ifelse}forall tempDict}bdef/aldus^65{findfont exch isWinPS{pop dup/Encodingget dup 161 get exch 162 get/cent eq exch/exclamdown eq and}if{p3`65 dup/Encoding isWinPS{winvec}{macvec}ifelse put definefont}{exch pop}ifelse}bdef/I1`65{findfont p3`65 dup/Encoding get 256 array copy dup dup 3 index/Encoding3 2 roll put}bdef/J1`65{put dup}bdef/K1`65{pop pop definefont _BaseMatrixmakefont fontdef}bdef/y1`65{gsi^65 fontdef}bdef/z1`65{fontget _ItalicMatrixmakefont fontdef}bdef/gsi^65{fontget dup maxlength 2 add dict/tempDict exchdef{1 index/FID ne 2 index/UniqueID ne and{tempDict 3 1 roll put}{pop pop}ifelse}forall tempDict begin/PaintType 2 def/StrokeWidth 1 0 FontMatrixdtransform dup mul exch dup mul add sqrt _OutlineWeight exch div def endtempDict definefont}bdef/auckland^65{/_ySize xdef/_xSize xdef fontget[_xSize 00 _ySize 0 0]makefont setfont}bdef/wcu^65{_dots mul}bdef/n`65{1440 div/_dotsxdef}bdef/J2`65{wcu^65 exch wcu^65 exch}bdef/w1`65{J2`65 auckland^65}bdef/K2`65{}bdef/A1`65{isWinPS{O2`65}{pop pop pop}ifelse 5 3 roll K2`65}bdef/K3`65{3 index 10 2 roll isWinPS{O2`65}{pop pop pop}ifelse 5 3 roll 7 -2 roll exchTShowTrap}bdef/L2`65{/_x1 _xSize _BoldFactorX mul def/_y1 _ySize _BoldFactorYmul def 5 copy _y1 add exch _x1 add exch K2`65 5 copy _y1 add exch _x1 subexch K2`65 5 copy _y1 sub exch _x1 add exch K2`65 5 copy _y1 sub exch _x1 subexch K2`65 K2`65}bdef/B1`65{O2`65 5 3 roll L2`65}bdef/C1`65{O2`65 6 3 roll 6copy U2`65 3 1 roll _ySize _ShadowFactorY mul add exch _xSize _ShadowFactorXmul add exch 3 -1 roll{L2`65}{K2`65}ifelse V2`65{L2`65}{K2`65}ifelse}bdef/D1`65{O2`65 5 3 roll gsave 6 index not{7 index _xSize _ySize auckland^65}if 5copy _ySize _ShadowFactorY mul add exch _xSize _ShadowFactorX mul add exch 11-1 roll{L2`65}{K2`65}ifelse grestore 6 -1 roll{M2`65}{6 -1 roll N2`65}ifelse}bdef/M2`65{/_x1 _OutlineSmearFrac wcu^65 def/_y1 _OutlineSmearFrac wcu^65 def5 copy _y1 neg add exch _x1 neg add exch K2`65 5 copy _y1 neg add exch _x1 addexch K2`65 5 copy _y1 add exch _x1 neg add exch K2`65 5 copy _y1 add exch _x1add exch K2`65 m3`65}bdef/E1`65{O2`65 5 3 roll M2`65}bdef/N2`65{gsave _xSize_ySize auckland^65 5 copy m3`65 grestore K2`65}bdef/F1`65{O2`65 6 3 roll N2`65}bdef version cvr 47.0 ge{/strwth{stringwidth pop}bdef}{/strwth{gsave newpath0 0 moveto 0 0 lineto closepath clip stringwidth grestore pop}bdef}ifelse/O2`65{dup 0 gt{dup 4 1 roll 4 index mul exch 5 index mul add 5 index strwthadd sub exch div add}{pop pop pop}ifelse}bdef/G1`65{fontget/_fDict xdef wcu^65_fDict/FontInfo known{isWinPS _fDict/FontType get 3 eq and{_dFontScale}{_fDict/FontMatrix get 3 get}ifelse mul/_uScale xdef _fDict/FontInfo get dup/UnderlinePosition known{dup/UnderlinePosition get _uScale mul/_uPosition xdef}{/_uPosition _dUPosition _uScale mul def}ifelse dup/UnderlineThickness known{dup/UnderlineThickness get _uScale mul/_uThickness xdef}{/_uThickness_dUThickness _uScale mul def}ifelse pop}{_dFontScale mul/_uScale xdef/_uPosition _dUPosition _uScale mul def/_uThickness _dUThickness _uScale muldef}ifelse/_uOThickness _BFontUOThick _uScale mul def _fDict/PaintType known{_fDict/PaintType get 2 eq{_fDict/StrokeWidth known{/_uOThickness _fDict/StrokeWidth get _uScale mul def}{1 0 _fDict/FontMatrix get dtransform dup mulexch dup mul add sqrt _OutlineWeight mul _uScale mul/_uOThickness xdef}ifelse}if}if}bdef/H1`65{gsave/_runLen xdef/_y1 xdef/_x1 xdef/_y1 _y1 _uPosition adddef{dup not{U2`65}if/_y2 _ySize _ShadowFactorY mul _y1 add def/_x2 _xSize_ShadowFactorX mul _x1 add def _uThickness _x2 _y2 _x2 _runLen add _y2 P2`65dup not{V2`65}if}if{_uOThickness _x1 _y1 _uThickness 2 div add _x1 _runLen add_y1 _uThickness 2 div sub Q2`65}{_uThickness _x1 _y1 _x1 _runLen add _y1 P2`65}ifelse grestore}bdef/mm$65{gsave _ySize 3 div sub/_y1 xdef _y1 _y1 3 1 roll_ySize 16 div 5 1 roll P2`65 grestore}bdef/P2`65{gsave moveto linetosetlinewidth k3`65 grestore}bdef/Q2`65{gsave south^65/_th xdef _URx _LLx subabs _th sub _URy _LLy sub abs _th sub _LLx _th 2 div add _LLy _th 2 div addRectPath gsave j3`65 grestore _th setlinewidth k3`65 grestore}bdef/d`65{/_ctype xdef/_txt xdef dup null ne{_ctype r365}if/_txc xdef SetOutColorSetShadColor/_tx?/l3`65 _ctype _txc _txt n2`65 S2`65}bdef/s365{dup _hifi eq{pop dup length 0 3 1 roll 0 1 3 -1 roll 1 sub{exch dup 3 -1 roll get dup type/arraytype eq exch dup type/packedarraytype eq 3 -1 roll or{1 get 3 -1 rolladd exch}{pop}ifelse}for pop}{dup _lab eq{pop aload pop pop 5 -2 roll pop popabs 1 le exch abs 1 le 3 -1 roll 100 exch sub .392159 le and and{0}{_mingray 1add}ifelse}{dup dup _rgb eq exch _def eq or{_def eq{aload pop pop 5 -2 rollpop pop}{aload pop pop}ifelse 3{1 exch sub 3 1 roll}repeat}{_defg eq{aload poppop 6 -2 roll pop pop}{aload pop pop}ifelse add add add}ifelse}ifelse}ifelse_mingray le}bdef/SetOutColor{_txt null eq{/_outxc null def/_outxt null def}{_txc null eq{_txt 0 eq{/_outxt 1 def _ctype _paper eq{/_outxc_OutlineFillColorCMYK def}{/_outxc null def}ifelse}{/_outxt 0 def/_outxc nulldef}ifelse}{_txc _ctype s365{/_outxt 1 def/_outxc _ctype _rgb eq _ctype _defeq or{_OutlineFillColorRGB}{_ctype _lab eq{_OutlineFillColorLab}{_OutlineFillColorCMYK}ifelse def}ifelse}{/_outxt 0 def/_outxc null def}ifelse}ifelse}ifelse/_cjc?/FTextPaint _ctype _outxc _outxt n2`65}bdef/SetShadColor{_txt null eq{/_shdc null def/_shdt null def}{/_shdo _txo def _txc null eq{_txt0 eq{/_shdt 1 def}{/_shdt T2`65 def}ifelse _ctype _paper eq{/_shdc_ShadowReverseColorCMYK def/_shdo T def}{/_shdc null def}ifelse}{_txc _ctypes365{/_shdt 1 def/_shdc _ctype _rgb eq _ctype _def eq or{_ShadowReverseColorRGB}{_ctype _lab eq{_ShadowReverseColorLab}{_ShadowReverseColorCMYK}ifelse}ifelse def/_shdo T def}{/_shdt T2`65 def/_shdc_txc def}ifelse}ifelse}ifelse/_cjc?/STextPaint _ctype _shdc _shdt n2`65}bdef/S2`65{_tx?{/K2`65{_txo setoverprint _txc _txt l3`65 moveto 0 4 2 roll 0 32 63 roll awidthshow}def/k3`65{_txo setoverprint _txc _txt l3`65 stroke}def/m3`65{_outxo setoverprint _outxc _outxt FTextPaint moveto 0 4 2 roll 0 32 6 3 rollawidthshow}def/j3`65{_outxo setoverprint _outxc _outxt FTextPaint fill}def}{/K2`65{5{pop}repeat}def/k3`65{newpath}def/m3`65{5{pop}repeat}def/j3`65{newpath}def}ifelse}bdef/T2`65{_txt _ShadowTintFactor mul}bdef/U2`65{/_ctc _txc def/_ctt _txt def/_cto _txo def/_cPaint/l3`65 ldef/_txc _shdc def/_txt _shdt def/_txo _shdo def/l3`65/STextPaint ldef}bdef/V2`65{/_txc _ctc def/_txt _ctt def/_txo _cto def/l3`65/_cPaint ldef}bdef/g`65{/_txo xdef}bdef/SaveHook{}ndef/RestoreHook{}ndef/W2`65{SaveHook _dots _LPmtx aload _PSdef aload _WCmtx aload_txgsave aload _TXctmx aload _gMTX currentmatrix aload}bdef/X2`65{astoresetmatrix astore pop astore pop astore pop astore pop astore pop/_dots xdefRestoreHook}bdef/bmt^65{save def}bdef/tsi^65{mark W2`65 counttomark 2 add -2roll pop restore X2`65 o`65}bdef/seni^65{restore}bdef/o`65{/_fo F def/_so Fdef/_txo F def}bdef/_GRPHmtx matrix def/_imagesave null def/_imc null def/_imtnull def/ImPaint null def/cjc^65{/_imagesave save def _WCmtx setmatrix}bdef/tvs^65{_PSdef setmatrix}bdef/dsd^65{_imagesave restore}bdef/espresso 4 dictdef espresso begin/setgray{setgray}def/setcmykcolor{setcmykcolor}def/setrgbcolor{setrgbcolor}def/sethsbcolor{sethsbcolor}def end/o3`65{espressobegin userdict begin}bdef/vm$65{/OSdict xdef end end end}bdef/b2a`65{/_imagesave save def{_GRPHmtx astore concat}if translate dup scale newpath 0 0RectPath clip newpath userdict begin/showpage{}def 0 setgray 0 setlinecap 1setlinewidth 0 setlinejoin 10 setmiterlimit[]0 setdash newpath F setoverprintmark}bdef/a2`65{OSdict begin}bdef/b2`65{end V1`65}bdef/kHu$65{/_imagesave savedef{_GRPHmtx astore concat}if translate scale translate newpath RectPath clipnewpath userdict begin/showpage{}def 0 setgray 0 setlinecap 1 setlinewidth 0setlinejoin 10 setmiterlimit[]0 setdash newpath F setoverprint mark}bdef/V1`65{cleartomark end _imagesave restore}bdef/_ortnt null def/_orclr null def/_gopfalse def/_cjc? false def/*setcmyk null def/*setrgb null def/*sethsb null def/*setgry null def/*setsepgray null def/*setcustomclr null def/*setprocessclrnull def/*sethificlr null def/*setop null def/*zimage null def/*zcustomcolorimage null def/*ztintedcolorimage null def/*zhificolorimage nulldef/$gate_1 T def/$clrOverride F def/Y2`65{P65PS begin/*setcmyk/setcmykcolorldef/*setrgb/setrgbcolor ldef/*sethsb/sethsbcolor ldef/*setgry/setgray ldef/*setcustomclr/setcustomcolor ldef/*setprocessclr/setprocesscolor ldef/*sethificlr/sethificolor ldef/*setop/setoverprint ldef/*setsepgray/setseparationgray ldef/*zimage/image ldef/*zcustomcolorimage/customcolorimageldef/*ztintedcolorimage/tintedcolorimage ldef/*zhificolorimage/hificolorimageldef end}bdef/X1`65{P65PS begin/setcmykcolor/*setcmyk ldef/setrgbcolor/*setrgbldef/sethsbcolor/*sethsb ldef/setgray/*setgry ldef/setcustomcolor/*setcustomclr ldef/setprocesscolor/*setprocessclr ldef/sethificolor/*sethificlr ldef/setoverprint/*setop ldef/setseparationgray/*setsepgray ldef/image/*zimage ldef/customcolorimage/*zcustomcolorimage ldef/tintedcolorimage/*ztintedcolorimage ldef/hificolorimage/*zhificolorimage ldef end}bdef/GrayORImage{_orclr null eq{_ortnt tintedseparationimage}{_orclr _ctype _hifieq{hificolorimage}{_ortnt tintedcolorimage}ifelse}ifelse}bdef/CMYKtoORtint{$setcmyk 1 $curgry sub _ortnt mul/_ortnt xdef}bdef/$curgry systemdict/currentgray get def/$setrgb systemdict/setrgbcolor get def/$sethsb systemdict/sethsbcolor get def/$setcmyk systemdict/setcmykcolor known{systemdict/setcmykcolor get}{{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1roll}repeat systemdict/setrgbcolor get exec pop}}ifelse def/a3`65{P65PS begin/setcmykcolor{gsave $setcmyk 1 $curgry sub grestore c3`65}def/setrgbcolor{gsave $setrgb 1 $curgry sub grestore c3`65}def/sethsbcolor{gsave $sethsb 1$curgry sub grestore c3`65}def/setgray{1 exch sub c3`65}def/setseparationgray{1 exch sub c3`65}def _spotOR?{/setcustomcolor/i3`65 ldef}{/setcustomcolor/b3`65 ldef}ifelse/setprocesscolor{gsave exch aload pop pop 4{4 index mul 4 1roll}repeat $setcmyk pop 1 $curgry sub grestore c3`65}def/sethificolor{gsaveexch aload length 4 sub{pop}repeat 4{4 index mul 4 1 roll}repeat $setcmyk pop1 $curgry sub grestore c3`65}def/setoverprint{d3`65}def/image{ORimage}def/customcolorimage{ORcustomcolorimage}def/tintedcolorimage{ORtintedcolorimage}def/hificolorimage{ORhificolorimage}def end}bdef/b3`65{gsave exch aload poppop 4{4 index mul 4 1 roll}repeat $setcmyk pop 1 $curgry sub grestore c3`65}bdef/c3`65{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def _ortnt null ne{_ortnt mul}{null}ifelse _orclr exch X1`65 SetORColorProc a3`65/$gate_1 T defend}{P65PS begin $MetalHead begin c3`65 end end}ifelse}bdef/d3`65{$gate_1$clrOverride and{P65PS begin/$gate_1 F def pop _gop X1`65 setoverprint a3`65/$gate_1 T def end}{P65PS begin $MetalHead begin setoverprint end end}ifelse}bdef/ORimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65 dup type/dicttype eq{dup/Decode get length 2 eq currentcolorspace dup 0 get/Indexed eq{1 get/DeviceGray eq}{pop true}ifelse and{GrayORImage}{image}ifelse}{GrayORImage}ifelse a3`65/$gate_1 T def end}{P65PS begin $MetalHead begin imageend end}ifelse}bdef/ORcustomcolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65 aload pop pop CMYKtoORtint GrayORImage a3`65/$gate_1 Tdef end}{P65PS begin $MetalHead begin customcolorimage end end}ifelse}bdef/ORtintedcolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 F def X1`65exch aload pop pop 4{4 index mul 4 1 roll}repeat CMYKtoORtint pop GrayORImagea3`65/$gate_1 T def end}{P65PS begin $MetalHead begin tintedcolorimage end end}ifelse}bdef/ORhificolorimage{$gate_1 $clrOverride and{P65PS begin/$gate_1 Fdef X1`65 aload pop pop{dup type dup/arraytype ne exch/packedarraytype ne and{exit}{pop}ifelse}loop CMYKtoORtint GrayORImage a3`65/$gate_1 T def end}{P65PSbegin $MetalHead begin hificolorimage end end}ifelse}bdef/W1`65{P65PS begin/_ctype xdef/_ortnt xdef dup null ne{_ctype r365}if/_orclr xdef/_cjc?/SetORColorProc _ctype _orclr _ortnt n2`65 false setoverprint/_gop false def/_spotOR? F def Y2`65 a3`65/$clrOverride T def end}bdef/Y1`65{P65PS begin/_gopxdef _gop setoverprint end}bdef/*findcmykcustomclr null def/*newcmykcustomclrnull def/epsdict null def/typedict null def/*$setcustomclr null def/_spotOR? Fdef/$spotOverride F def/$gate_2 T def/clrAdjust? F def/_fhbool F def/f2`65{P65PS begin dup dict/epsdict xdef dict/typedict xdef/clrAdjust? T def end}bdef/g2`65{/_ctype xdef cvn _ctype _hifi eq{3 index 2 mul 8 add}{7}ifelse 1 roll_ctype exch 2 MakeReadOnlyArray 1 index cvn exch typedict 3 1 roll put _ctype_hifi eq{findhificolor}if _ctype _spot eq{findcmykcustomcolor}if _ctype_process eq{findcmykprocesscolor}if epsdict 3 1 roll put}bdef/h2`65{_registration exch 2 array astore exch cvn exch typedict 3 1 roll put}bdef/i2`65{P65PS begin clrAdjust?{/_spotOR? T def e3`65 g3`65/$spotOverride T def}if end}bdef/e3`65{P65PS begin/*findcmykcustomclr/findcmykcustomcolor ldef/*newcmykcustomclr/newcmykcustomcolor ldef/*$setcustomclr/setcustomcolor ldefend}bdef/f3`65{P65PS begin/findcmykcustomcolor/*findcmykcustomclr ldef/newcmykcustomcolor/*newcmykcustomclr ldef/setcustomcolor/*$setcustomclr ldefend}bdef/g3`65{P65PS begin/findcmykcustomcolor/h3`65 ldef/newcmykcustomcolor/n3`65 ldef/setcustomcolor/i3`65 ldef end}bdef/h3`65{$gate_2 $spotOverride and{P65PS begin/$gate_2 F def f3`65 dup cvn epsdict exch known{5 1 roll 4{pop}repeat cvn epsdict exch get}{findcmykcustomcolor}ifelse g3`65/$gate_2 T defend}{P65PS begin $MetalHead begin findcmykcustomcolor end end}ifelse}bdef/n3`65{$gate_2 $spotOverride and{P65PS begin/$gate_2 F def/_fhbool xdef dupcvn epsdict exch known{5 1 roll 4{pop}repeat cvn epsdict exch get aload pop}ifdup cvn typedict exch known{dup cvn typedict exch get aload pop pop _hifi eq{{1 index type dup/arraytype eq exch/packedarraytype eq or{exch pop}{exit}ifelse}loop}if}if _fhbool f3`65 newcmykcustomcolor g3`65/$gate_2 T def end}{P65PSbegin $MetalHead begin newcmykcustomcolor end end}ifelse}bdef/i3`65{$gate_2$spotOverride and{P65PS begin/$gate_2 F def 1 index dup length 1 sub get cvndup typedict exch known{typedict exch get aload pop 1 index _registration eq{exch pop mul 1 exch sub exch pop f3`65 setseparationgray g3`65}{1 index_process eq{f3`65 exch pop mul setprocesscolor g3`65}{1 index _spot eq{f3`65exch pop mul setcustomcolor g3`65}{exch _hifi eq{f3`65 mul sethificolor g3`65}if}ifelse}ifelse}ifelse}{pop f3`65 setcustomcolor g3`65}ifelse/$gate_2 T defend}{P65PS begin $MetalHead begin setcustomcolor end end}ifelse}bdef/BMT 2dict def BMT begin/*def/def load def/def{1 index/fcheckload eq{pop{pop pop}}if*def}bdef end/t1`65{BMT begin userdict begin}bdef/u1`65{end end}bdef/u1a`65{findfont pop}bdef end/setpacking where{pop setpacking}if%%EndResource%%BeginResource: procset P65IMAGE_PS 1.0 1%%Copyright: (C) Copyright 1993,1995 Adobe Systems, Inc. All Rights Reserved.%%Version:1.0 1/AdobeIMLIBDict_5.0.00 112 dict def AdobeIMLIBDict_5.0.00 begin/_proc1 nulldef/_proc2 null def/_newproc null def/_curxfer{}def/_imcmykdarkness 0 def/_ic0 def/_im 0 def/_iy 0 def/_ik 0 def/_ir 0 def/_ig 0 def/_ib 0 def/_iL 0 def/_iA 0 def/_iB 0 def/_cproc null def/_mproc null def/_yproc null def/_kprocnull def/_rproc null def/_gproc null def/_bproc null def/_mbuf()def/_ybuf()def/_kbuf()def/_gbuf()def/_bbuf()def/_tint -1 def/_ix 0 def/_len 0 def/_cname()def/_ctype null def/_aldimtint 1 def/_localxfer{}def/_spot 1 def/_process 2def/_hifi 3 def/_paper 4 def/_registration 5 def/_rgb 6 def/_def 7 def/_defg 8def/_lab 9 def/bdef{bind def}bind def/xdef{exch def}def/IMndef{1 index where{pop pop pop}{def}ifelse}bdef/_imagemask/imagemask load dup type/arraytype eq{bdef}{def}ifelse/_image systemdict/image get def/_settransfer systemdict/settransfer get def/_currenttransfer systemdict/currenttransfer get def/iA^65{/packedarray where{pop packedarray}{array astore readonly}ifelse}bdef/iB^65{/packedarray where{pop dup type/packedarraytype eq 2 index type/packedarraytype eq or}{false}ifelse{/_proc2 exch cvlit def/_proc1 exch cvlitdef _proc1 aload pop _proc2 aload pop _proc1 length _proc2 length addpackedarray cvx}{/_proc2 exch cvlit def/_proc1 exch cvlit def/_newproc _proc1length _proc2 length add array def _newproc 0 _proc1 putinterval _newproc_proc1 length _proc2 putinterval _newproc cvx}ifelse}bdef/iC^65{aload pop/_ikxdef/_iy xdef/_im xdef/_ic xdef}bdef/iAP^65{aload pop/_ib xdef/_ig xdef/_irxdef}bdef/iAQ^65{aload pop/_iL xdef/_iA xdef/_iB xdef}bdef/iD^65{_ic .3 mul_im .59 mul _iy .11 mul _ik add add add dup 1 gt{pop 1}if/_imcmykdarkness xdef}def/level2/languagelevel where{pop languagelevel 1 ne}{false}ifelse def/hascolor/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors getexec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}ifelse def/iG^65{0 1 2 index length 1 sub{dup 2 index exch get 255 exch sub 2 index 3 1roll put}for}bdef/iO^65{gsave newpath setgray 0 0 moveto 0 1 lineto 1 1 lineto1 0 lineto closepath fill grestore}def/IMapplytint{/_tint xdef aload length/_len xdef/_ix _len def _len 1 sub{_ix -1 roll _tint mul _len 4 eq{_tint sub 1add}if _ix 1 roll/_ix _ix 1 sub def}repeat _len iA^65}def/IMmakeimagedict{level2{7 dict begin/ImageType 1 def/Decode xdef/DataSource xdef/ImageMatrixxdef/BitsPerComponent xdef/Height xdef/Width xdef currentdict end}{6{pop}repeat}ifelse}def/IMmodifyHalftoneXferAll{level2{currenthalftone dup lengthdict copy begin currentdict{dup type/dicttype eq{dup length dict copy begincurrentdict/TransferFunction known{/TransferFunction load 2 index exch iB^65/TransferFunction xdef}if currentdict end def}{pop pop}ifelse}forallcurrentdict end sethalftone pop}{pop}ifelse}bdef/IMapplytinttostackcolor{dup_hifi eq{pop/_cname xdef/_ninks xdef/_depth _ninks 2 mul def _ninks{_aldimtintmul _depth 1 roll _depth 1 roll}repeat/_depth _depth 4 add def 4{_depth -1roll _aldimtint mul _depth 1 roll/_depth _depth 1 sub def}repeat _ninks _cname}{dup _rgb eq{pop 4 1 roll 3{_aldimtint mul _aldimtint sub 1 add 4 1 roll}repeat}{dup _lab eq{pop 6 1 roll 1 _aldimtint sub dup 4 index 100 exch sub mul5 -1 roll add 4 1 roll dup 3 index 0 exch sub mul 4 -1 roll add 3 1 roll 1index 0 exch sub mul add 6 -1 roll}{dup _def eq{pop 6 1 roll 3{_aldimtint mul_aldimtint sub 1 add 3 1 roll}repeat 6 -1 roll}{_defg eq{7 1 roll 4{_aldimtintmul 4 1 roll}repeat 7 -1 roll}{5 1 roll 4{_aldimtint mul 5 1 roll}repeat}ifelse}ifelse}ifelse}ifelse}ifelse}def/iM^65{_imc null eq _ctype _registrationeq or _ctype _paper eq or{true iJ^65 _aldimtint tintedseparationimage}{_ctype_spot eq{_imc _aldimtint tintedcolorimage}if _ctype _process eq{_imc_tintedcustomcolorimage}if _ctype _rgb eq{_imc_tinted rgbcustomcolorimage}if _ctype_def eq{_imc_tinted defcustomcolorimage}if _ctype _lab eq{_imc_tintedlabcustomcolorimage}if _ctype _defg eq{_imc_tinted defgcustomcolorimage}if_ctype _hifi eq{_imc_tinted hificolorimage}if}ifelse}def/iN^65{_image}def/customcolorimage level2{{aload pop/_cname xdef 4 iA^65 iC^65 _ctype _spot eqversion cvr 2012 ge and _cname(Red)ne and _cname(Green)ne and _cname(Blue)neand{[/Separation _cname/DeviceCMYK{dup _ic mul exch dup _im mul exch dup _iymul exch _ik mul}]setcolorspace currenttransfer settransfer dup type/dicttypeeq{begin/Decode[1 0]def currentdict end}{[1 0]IMmakeimagedict}ifelse _image}{[/Indexed/DeviceCMYK 255{255 div _localxfer 1 exch sub dup dup dup _ic mul 4 -1roll _im mul 4 -1 roll _iy mul 4 -1 roll _ik mul}]setcolorspace dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0 255]IMmakeimagedict}ifelse _image}ifelse}IMndef}{{aload pop pop 4 iA^65 iC^65 _iy 0.0 eq _im 0.0eq and _ic 0.0 eq and hascolor not or{iD^65{_imcmykdarkness mul 1_imcmykdarkness sub add}settransfer _image}{/_localxfer load dup dup dup{_icmul _ic sub 1 add}iB^65/_cproc xdef{_im mul _im sub 1 add}iB^65/_mproc xdef{_iy mul _iy sub 1 add}iB^65/_yproc xdef{_ik mul _ik sub 1 add}iB^65/_kprocxdef currentcolortransfer/_kproc load exch iB^65 4 1 roll/_yproc load exchiB^65 4 1 roll/_mproc load exch iB^65 4 1 roll/_cproc load exch iB^65 4 1 rollsetcolortransfer/_mbuf 0 string def/_ybuf 0 string def/_kbuf 0 string def{iG^65 dup length _mbuf length ne{dup length dup dup/_mbuf exch string def/_ybuf exch string def/_kbuf exch string def}if dup _mbuf copy _ybuf copy_kbuf copy pop}iB^65{_mbuf}{_ybuf}{_kbuf}true 4 colorimage}ifelse}IMndef}ifelse/rgbcustomcolorimage{aload pop pop 3 iA^65 iAP^65 level2{[/Indexed/DeviceRGB 255{255 div _localxfer 1 exch sub dup dup _ir mul exch sub 1 addexch dup dup _ig mul exch sub 1 add exch dup _ib mul exch sub 1 add}]setcolorspace dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0255]IMmakeimagedict}ifelse _image}{/_localxfer load dup dup{dup _ir mul exchsub 1 add}iB^65/_rproc xdef{dup _ig mul exch sub 1 add}iB^65/_gproc xdef{dup_ib mul exch sub 1 add}iB^65/_bproc xdef currentcolortransfer/_bproc load exchiB^65 4 1 roll/_gproc load exch iB^65 4 1 roll/_rproc load exch iB^65 4 1 rollsetcolortransfer/_gbuf 0 string def/_bbuf 0 string def{iG^65 dup length _gbuflength ne{dup length dup/_gbuf exch string def/_bbuf exch string def}if dup_gbuf copy _bbuf copy pop}iB^65{_gbuf}{_bbuf}true 3 colorimage}ifelse}IMndef/labcustomcolorimage{aload pop pop 3 iA^65 iAQ^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer dup _iL mul exch 100 mul sub 100 add _iA _iB}]setcolorspacepop dup type/dicttype eq{begin/Decode[255 0]def currentdict end}{[255 0]IMmakeimagedict}ifelse _image}IMndef/defcustomcolorimage{aload pop pop 3 iA^65iAP^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer 1 exch sub dup dup _irmul exch sub 1 add exch dup dup _ig mul exch sub 1 add exch dup _ib mul exchsub 1 add}]setcolorspace pop dup type/dicttype eq{begin/Decode[0 255]defcurrentdict end}{[0 255]IMmakeimagedict}ifelse _image}IMndef/defgcustomcolorimage{aload pop pop 4 iA^65 iC^65 exch[/Indexed 3 -1 roll 255{255 div _localxfer 1 exch sub dup dup dup _ic mul 4 -1 roll _im mul 4 -1 roll_iy mul 4 -1 roll _ik mul}]setcolorspace pop dup type/dicttype eq{begin/Decode[0 255]def currentdict end}{[0 255]IMmakeimagedict}ifelse _image}IMndef/separationimage{level2{[/Separation(All)/DeviceCMYK{dup dup dup}]setcolorspace dup type/dicttype eq{begin/Decode[1 0]def currentdict end}{[1 0]IMmakeimagedict}ifelse image}{_image}ifelse}IMndef/tintedseparationimage{/_aldimtint xdef{_aldimtint mul 1 _aldimtint sub add}settransfer level2{gsave_currenttransfer IMmodifyHalftoneXferAll separationimage grestore}{separationimage}ifelse}IMndef/tintedcolorimage{IMapplytint _ctype _rgb eq{rgbcustomcolorimage}{customcolorimage}ifelse}IMndef/hificolorimage{aload pop/_cname xdef{dup type dup/arraytype ne exch/packedarraytype ne and{exit}{pop}ifelse}loop/_ctype _process def _cname findcmykprocesscolor customcolorimage}IMndef/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1roll}repeat systemdict/setrgbcolor get exec pop}IMndef/setcustomcolor{1 indexdup dup 4 get(Red)eq 3 1 roll 4 get(Green)eq exch 4 get(Blue)eq or or notlevel2 and{exch[exch/Separation exch dup 4 get exch/DeviceCMYK exch 0 4getinterval[exch/dup load exch cvx{mul exch dup}/forall load/pop load dup]cvx]setcolorspace setcolor}{exch aload pop pop 4{4 index mul 4 1 roll}repeatsetcmykcolor pop}ifelse}IMndef/setprocesscolor{exch aload pop pop 4{4 indexmul 4 1 roll}repeat setcmykcolor pop}IMndef/sethificolor{exch aload length 4sub{pop}repeat 4{4 index mul 4 1 roll}repeat setcmykcolor pop}IMndef/setlabcolor{5 -1 roll setcolorspace 4 -1 roll iAO^65 setcolor}IMndef/setdefcolor{5 -1 roll setcolorspace 4 -1 roll iAO^65 setcolor}IMndef/setdefgcolor{6 -1 roll setcolorspace 5 -1 roll iAO^65 setcolor}IMndef/findrgbcolor{4 iA^65}IMndef/finddefcolor{6 iA^65}IMndef/findlabcolor{6 iA^65}IMndef/finddefgcolor{7 iA^65}IMndef/findcmykcustomcolor{5 iA^65}IMndef/findcmykprocesscolor{5 iA^65}IMndef/findhificolor{exch dup dup 4 2 roll 2 mul7 add 2 roll mark exch 2 mul 7 add 1 roll{1 index type/stringtype ne{exit}if 2iA^65 counttomark 1 add 1 roll counttomark 3 add mark exch 1 roll counttomark1 add -1 roll pop}loop counttomark 1 add 4 roll counttomark 1 add -1 roll popexch 5 add iA^65}IMndef/iAO^65{systemdict/findcolorrendering known{systemdict/findcolorrendering get exec{/ColorRendering findresource systemdict/setcolorrendering get exec}{dup/DefaultColorRendering eq{pop}{/ColorRenderingfindresource dup == systemdict/setcolorrendering get exec}ifelse}ifelse}{pop}ifelse}IMndef/iW^65{abs exch abs 2 copy add 1 gt{1 sub dup mul exch 1 sub dupmul add 1 sub}{dup mul exch dup mul add 1 exch sub}ifelse}def/iX^65{exch popabs 1 exch sub}def/iAG^65{currentscreen pop/iW^65 load setscreen}def/iP^65{currentscreen 3 -1 roll pop setscreen}def/iQ^65{currentscreen exch pop 2 indexexch setscreen pop}def/iR^65{currentscreen pop 2 index setscreen pop}def/iT^65{dup length 2 sub/_lutlen xdef/_lut xdef{_lutlen mul ADBIMTMP_2/_index 3 -1roll put ADBIMTMP_2/_low _index floor put ADBIMTMP_2/_high _low 1 add put_index _low sub _lut _high cvi get mul _high _index sub _lut _low cvi get muladd}/_localxfer xdef}def/iV^65{concat}def/iH^65{dup _process eq{popfindcmykprocesscolor}{dup _spot eq{pop findcmykcustomcolor}{dup _rgb eq{popfindrgbcolor}{dup _lab eq{pop findlabcolor}{dup _def eq{pop finddefcolor}{_defg eq{finddefgcolor}{findhificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}def/iI^65{/_ctype xdef/_aldimtint xdef dup null eq{/_imc xdef}{_ctype_hifi eq{1 index 2 mul 6 add}{_ctype _rgb eq{4}if _ctype _process eq _ctype_spot eq or{5}if _ctype _def eq _ctype _lab eq or{6}if _ctype _defg eq{7}if}ifelse copy _ctype iH^65/_imc xdef _ctype IMapplytinttostackcolor _ctype iH^65/_imc_tinted xdef}ifelse _imc null eq{1 _aldimtint sub setseparationgray}{_ctype _process eq{_imc _aldimtint setprocesscolor}{_ctype _spot eq{_imc_aldimtint setcustomcolor}{_ctype _rgb eq{_imc_tinted aload pop popsetrgbcolor}{_ctype _lab eq{_imc_tinted aload pop pop setlabcolor}{_ctype _defeq{_imc_tinted aload pop pop setdefcolor}{_ctype _defg eq{_imc_tinted aloadpop pop setdefgcolor}{_imc _aldimtint sethificolor}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}ifelse}def/iJ^65{setoverprint}def/iK^65{false iJ^65 0.0 0.0 0.01.0(Black)1.0 _process iI^65}def/iL^65{/_dr1 xdef/_dr0 xdef{255 mul dup dr0 lt{pop 0.0}{dup dr1 gt{pop 1.0}{dr0 sub dr1 dr0 sub div}ifelse}ifelse}settransfer}def/iS^65{/_invertthemask? xdef}def/OPIimage{dup type/dicttype eq{iN^65}{iM^65}ifelse}def/IMimagemask{/_invertthemask? where{pop dup type/dicttype eq{}{3 -1 roll _invertthemask?{not}if 3 1 roll}ifelse}if _imagemask}def/iY^65{/_colorimage?/colorimage where{pop true}{false}ifelse def}def/iZ^65{{/_readdata{currentfile exch readstring pop}def}{/_readdata{currentfile exchreadhexstring pop}def}ifelse/_rows xdef/_cols xdef/_picstr1 _cols string def/_picstr2 _cols string def/_picstr3 _cols string def/_picstr4 _cols string def/_picstr5 _cols string def 12 dict begin/ImageType 1 def/Width _cols def/Height _rows def/ImageMatrix[_cols 0 0 _rows neg 0 _rows]def/BitsPerComponent8 def _colorimage?{/Decode[0 1 0 1 0 1 0 1]def}{/Decode[0 1]def}ifelse_colorimage?{/MultipleDataSources true def/DataSource[{_picstr1 _readdata}{_picstr2 _readdata}{_picstr3 _readdata}{_picstr4 _readdata _picstr5 _readdatapop}]def}if _colorimage? not{/DataSource{_picstr1 _readdata pop _picstr2_readdata pop _picstr3 _readdata pop _picstr4 _readdata pop _picstr5 _readdata}def}if currentdict end}def/IMcmykimage{level2{_colorimage?{/DeviceCMYK}{/DeviceGray}ifelse setcolorspace image}{begin Width Height BitsPerComponentImageMatrix Decode length 2 eq{/DataSource load image}if Decode length 8 eq{DataSource 0 get DataSource 1 get DataSource 2 get DataSource 3 get true 4colorimage}if end}ifelse}def/iAC^65{/ADBIMTMP_2 where{pop ADBIMTMP_2 begin}{/ADBIMTMP_2 75 dict def ADBIMTMP_2 begin/_cname()def/_ctype null def/_aldimtint 1 def/_imc[]def/_imc_tinted[]def/_tint -1 def/_ix 0 def/_len 0 def/_ic 0 def/_im 0 def/_iy 0 def/_ik 0 def/_ir 0 def/_ig 0 def/_ib 0 def/_iL 0def/_iA 0 def/_iB 0 def/_imcmykdarkness 0 def/_proc1 null def/_proc2 null def/_newproc null def/_cproc null def/_mproc null def/_yproc null def/_kproc nulldef/_rproc null def/_gproc null def/_bproc null def/_mbuf()def/_ybuf()def/_kbuf()def/_gbuf()def/_bbuf()def/_colorimage? false def/_readdata{}def/_rows0 def/_cols 0 def/_picstr1 null def/_picstr2 null def/_picstr3 null def/_picstr4 null def/_picstr5 null def/_invertthemask? false def/_dr1 0 def/_dr00 def/_lutlen 0 def/_lut[]def/_index 0 def/_low 0 def/_high 0 def/_ninks 0 def/_depth 0 def/_curxfer currenttransfer def/currenttransfer{{}}def/_localxfer{}def/settransfer{/_localxfer load exch iB^65/_curxfer load iB^65 _settransfer}def}ifelse}def/iAD^65{end}def end%%EndResource%%EndProlog%%BeginSetupAdobeIMLIBDict_5.0.00 begin P65PS begin/isWinPS false def0 k1`65f1`6520 v1`65F v2`65%%EndSetup%%Page: 3 1%%BeginPageSetup j`65%%EndPageSetup 0.05 -0.05 scale3827 -5953 translate-3827 0 translatebse^654.8 4.8 1 1 ps$65300 n`65/$0 bmt^65o`65N1`65N1`65F M1`65$0 tsi^65/$0 bmt^65%%IncludeResource: font Times-Roman/AA /|______Times-Roman T /Times-Roman x1`65/$1 bmt^65/AA 160 160 w1`65T g`650 0 0 1 (Black) 1 _process d`65236 1100 (2000) 0 0.347214 68 0 3 A1`651398 1100 (3) 0 0.333145 17 0 0 A1`65O1`65N1`65F M1`65$1 tsi^65/$1 bmt^65%%IncludeResource: font Times-Bold/AB /|______Times-Bold T /Times-Bold x1`65/$2 bmt^65/AB 160 160 w1`65T g`650 0 0 1 (Black) 1 _process d`65271 936 (Figur) 0.036636 0.333145 81 0 4 A1`65351 936 (e 7b.) 0.036636 0.333145 68 1 4 A1`65437 936 (Bout plan for) 0.036636 0.333145 195 2 12 A1`65631 936 ( dir) 0.036636 0.333145 52 1 3 A1`65683 936 (ect elimination for) 0.036636 0.333145 267 2 18 A1`65950 936 ( team competitions \(16 teams\)) 0.036636 0.333145 433 4 28 A1`65O1`65N1`65F M1`65$2 tsi^65/$2 bmt^65%%IncludeResource: font Helvetica/AC /|______Helvetica T /Helvetica x1`65/$3 bmt^65/AC 100 100 w1`65T g`650 0 0 1 (Black) 1 _process d`65776 -924 (1) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -865 (9) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -840 (8) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -807 (5) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65764 -782 (12) 0 0.368637 24 0 1 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65764 -749 (13) 0 0.368637 24 0 1 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -724 (4) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -690 (3) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65764 -665 (14) 0 0.368637 24 0 1 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65765 -632 (1) 0 0.451447 12 0 0 A1`65776 -632 (1) 0 0.451447 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -607 (6) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -574 (7) 0 0.375107 12 0 0 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65764 -549 (10) 0 0.368637 24 0 1 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65764 -515 (15) 0 0.368637 24 0 1 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65776 -490 (2) 0 0.375107 12 0 0 A1`65O1`650 0 0 1 (Black) 1 _process a`651 904 -931.5 804 -931.5 F jbd^651 904.5 -907 904.5 -932 F jbd^65N1`65F M1`65/AC 100 100 w1`65764 -899 (16) 0 0.368637 24 0 1 A1`65O1`651 904 -907.5 804 -907.5 F jbd^651 1004 -918.5 904 -918.5 F jbd^651 904 -872.5 804 -872.5 F jbd^651 904.5 -849 904.5 -874 F jbd^651 904 -849.5 804 -849.5 F jbd^651 1004 -861.5 904 -861.5 F jbd^651 904 -814.5 804 -814.5 F jbd^651 904.5 -790 904.5 -815 F jbd^651 904 -790.5 804 -790.5 F jbd^651 904 -756.5 804 -756.5 F jbd^651 904.5 -732 904.5 -757 F jbd^651 904 -732.5 804 -732.5 F jbd^651 904 -698.5 804 -698.5 F jbd^651 904.5 -674 904.5 -699 F jbd^651 904 -674.5 804 -674.5 F jbd^651 904 -639.5 804 -639.5 F jbd^651 904.5 -615 904.5 -640 F jbd^651 904 -615.5 804 -615.5 F jbd^651 904 -581.5 804 -581.5 F jbd^651 904.5 -557 904.5 -582 F jbd^651 904 -557.5 804 -557.5 F jbd^651 904 -523.5 804 -523.5 F jbd^651 904.5 -499 904.5 -524 F jbd^651 904 -499.5 804 -499.5 F jbd^651 1004.5 -861 1004.5 -919 F jbd^651 1004 -802.5 904 -802.5 F jbd^651 1004 -744.5 904 -744.5 F jbd^651 1004.5 -744 1004.5 -803 F jbd^651 1004 -685.5 904 -685.5 F jbd^651 1004 -628.5 904 -628.5 F jbd^651 1004.5 -628 1004.5 -686 F jbd^651 1004 -568.5 904 -568.5 F jbd^651 1004 -511.5 904 -511.5 F jbd^651 1004.5 -511 1004.5 -569 F jbd^651 1104 -889.5 1004 -889.5 F jbd^651 1104 -656.5 1004 -656.5 F jbd^651 1104.5 -774 1104.5 -890 F jbd^651 1104.5 -540 1104.5 -657 F jbd^651 1204 -831.5 1104 -831.5 F jbd^651 1204.5 -599 1204.5 -832 F jbd^651 1104 -774.5 1004 -774.5 F jbd^651 1104 -540.5 1004 -540.5 F jbd^651 1204 -599.5 1104 -599.5 F jbd^651 1304 -715.5 1204 -715.5 F jbd^65N1`65F M1`65/AC 100 100 w1`651125 -708 (For 1st) 0.003159 0.375107 67 1 6 A1`65O1`651 750 -918.5 650 -918.5 F jbd^651 750 -802.5 650 -802.5 F jbd^651 750 -685.5 650 -685.5 F jbd^651 750 -568.5 650 -568.5 F jbd^651 650.5 -861 650.5 -919 F jbd^651 750 -861.5 650 -861.5 F jbd^651 650.5 -744 650.5 -803 F jbd^651 750 -744.5 650 -744.5 F jbd^651 650.5 -628 650.5 -686 F jbd^651 750 -628.5 650 -628.5 F jbd^651 650.5 -511 650.5 -569 F jbd^651 750 -511.5 650 -511.5 F jbd^651 650 -889.5 550 -889.5 F jbd^651 650 -656.5 550 -656.5 F jbd^651 650 -774.5 550 -774.5 F jbd^651 650 -540.5 550 -540.5 F jbd^651 550.5 -774 550.5 -890 F jbd^651 550.5 -540 550.5 -657 F jbd^651 550 -831.5 450 -831.5 F jbd^651 550 -599.5 450 -599.5 F jbd^651 450.5 -599 450.5 -832 F jbd^651 450 -715.5 350 -715.5 F jbd^65N1`65F M1`65/AC 100 100 w1`65462 -708 (For 9th) 0.083313 0.375107 68 1 6 A1`65O1`651 650 -216.5 550 -216.5 F jbd^651 650 -159.5 550 -159.5 F jbd^651 550 -188.5 450 -188.5 F jbd^65N1`65F M1`65/AC 100 100 w1`65562 -181 (For 1) 0.079498 0.375107 51 1 4 A1`65611 -181 (1th) 0.079498 0.375107 30 0 2 A1`65O1`651 1104 -300.5 1004 -300.5 F jbd^651 1104 -242.5 1004 -242.5 F jbd^651 1104.5 -242 1104.5 -301 F jbd^651 1204 -270.5 1104 -270.5 F jbd^65N1`65F M1`65/AC 100 100 w1`651022 -265 (For 3rd) -0.024521 0.375107 69 1 6 A1`65O1`651 943 124.5 843 124.5 F jbd^651 943 182.5 843 182.5 F jbd^651 843.5 183 843.5 124 F jbd^651 843 153.5 743 153.5 F jbd^65N1`65F M1`65/AC 100 100 w1`65855 160 (For 7th) 0.083313 0.375107 68 1 6 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65918 81 (Places ) -0.204147 0.375107 71 1 6 A1`65989 81 (5) 0 2.874939 14 0 0 A1`651003 81 (\320) 0 2.041763 14 0 0 A1`651016 81 (8) 0 0.375107 12 0 0 A1`65O1`651 1101 112.5 1001 112.5 F jbd^651 1101.5 137 1101.5 112 F jbd^651 1101 136.5 1001 136.5 F jbd^651 1101 170.5 1001 170.5 F jbd^651 1101.5 195 1101.5 170 F jbd^651 1101 194.5 1001 194.5 F jbd^651 1201 124.5 1101 124.5 F jbd^651 1201 182.5 1101 182.5 F jbd^651 1201.5 183 1201.5 124 F jbd^651 1301 153.5 1201 153.5 F jbd^65N1`65F M1`65/AC 100 100 w1`651120 160 (For 5th) 0.083313 0.375107 68 1 6 A1`65O1`651 551 372.5 451 372.5 F jbd^651 551 430.5 451 430.5 F jbd^651 451.5 431 451.5 372 F jbd^651 451 400.5 351 400.5 F jbd^65N1`65F M1`65/AC 100 100 w1`65464 408 (For 15th) -0.003311 0.375107 80 1 7 A1`65O1`65N1`65F M1`65/AC 100 100 w1`65515 329 (Places 13) 0.039169 0.375107 95 1 8 A1`65610 329 (\320) 0 2.041763 14 0 0 A1`65624 329 (16) 0 0.375107 24 0 1 A1`65O1`651 710 360.5 610 360.5 F jbd^651 710.5 385 710.5 360 F jbd^651 710 384.5 610 384.5 F jbd^651 710 418.5 610 418.5 F jbd^651 710.5 443 710.5 418 F jbd^651 710 442.5 610 442.5 F jbd^651 810 372.5 710 372.5 F jbd^651 810 430.5 710 430.5 F jbd^651 810.5 431 810.5 372 F jbd^651 910 400.5 810 400.5 F jbd^65N1`65F M1`65/AC 100 100 w1`65717 408 (For 13th) -0.003311 0.375107 80 1 7 A1`65O1`651 550.5 -159 550.5 -217 F jbd^65$3 tsi^65showpage%%Trailerendend%%Pages: 1%%DocumentSuppliedResources: procset P65PS_PS 1.0 1%%+ procset P65IMAGE_PS 1.0 1%%DocumentNeededResources: font Times-Roman%%+ font Helvetica%%+ font Times-Bold%%DocumentProcessColors: Black%%DocumentCustomColors: %%CMYKCustomColor: %ADBDocumentInks: %ADBDocumentMultiInkColors: %%EOF