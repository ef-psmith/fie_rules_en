%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(TM) 5.0%%For: (Jenni Navratil) (Navratil Art Studio)%%Title: (01UKPISTA2.eps)%%CreationDate: (24/5/04) (7:45 pm)%%BoundingBox: 135 281 498 520%%HiResBoundingBox: 135.6962 281.0843 497.3038 519.8157%%DocumentProcessColors: Black%%DocumentFonts: Helvetica-Light%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.0 0%%+ procset Adobe_typography_AI5 1.0 0%%+ procset Adobe_Illustrator_AI6_vars Adobe_Illustrator_AI6%%+ procset Adobe_Illustrator_AI5 1.0 0%AI5_FileFormat 2.0%AI3_ColorUsage: Black&White%AI3_TemplateBox: 306 396 306 396%AI3_TileBox: 19 -17 595 805%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 595 842%AI5_RulerUnits: 1%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI5_OpenToView: 66 648 2 1137 819 58 0 1 7 43%AI5_OpenViewLayers: 7%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 %%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 23 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			5 packedarray		} bind def		/setcustomcolor		{			exch aload pop pop			4			{				4 index mul 4 1 roll			} repeat			5 -1 roll pop			setcmykcolor		}		def	} if		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	level2?	{		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore		add add add 4 eq	}	{		1 0 0 0 testCMYKColorThrough		0 1 0 0 testCMYKColorThrough		0 0 1 0 testCMYKColorThrough		0 0 0 1 testCMYKColorThrough		and and and	} ifelse	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset Adobe_typography_AI5 1.0 1%%Title: (Typography Operators)%%Version: 1.0 %%CreationDate:(03/26/93) ()%%Copyright: ((C) 1987-1993 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_typography_AI5 54 dict dup beginput/initialize{ begin begin	Adobe_typography_AI5 begin	Adobe_typography_AI5	{		dup xcheck		{			bind		} if		pop pop	} forall end end end	Adobe_typography_AI5 begin} def/terminate{	currentdict Adobe_typography_AI5 eq	{	 end	} if} def/modifyEncoding{	/_tempEncode exch ddef	/_pntr 0 ddef	{		counttomark -1 roll		dup type dup /marktype eq		{			pop pop exit		}		{			/nametype eq			{				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll				put			}			{				/_pntr exch ddef			} ifelse		} ifelse	} loop	_tempEncode} def/TE{	StandardEncoding 256 array copy modifyEncoding	/_nativeEncoding exch def} def%/TZ{	dup type /arraytype eq	{		/_wv exch def	}	{		/_wv 0 def	} ifelse	/_useNativeEncoding exch def	pop pop	findfont _wv type /arraytype eq	{		_wv makeblendedfont	} if	dup length 2 add dict begin	mark exch	{		1 index /FID ne		{			def		} if		cleartomark mark	} forall	pop	/FontName exch def	counttomark 0 eq	{		1 _useNativeEncoding eq		{			/Encoding _nativeEncoding def		} if		cleartomark	}	{		/Encoding load 256 array copy		modifyEncoding /Encoding exch def	} ifelse	FontName currentdict end	definefont pop} def/tr{	_ax _ay 3 2 roll} def/trj{	_cx _cy _sp _ax _ay 6 5 roll} def/a0{	/Tx	{		dup		currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss	} ddef	/Tj	{		dup		currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss	} ddef} def/a1{	/Tx	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		tr _psf		newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		dup currentpoint 3 2 roll		trj _pjsf		newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/e0{	/Tx	{		tr _psf	} ddef	/Tj	{		trj _pjsf	} ddef} def/e1{	/Tx	{		dup currentpoint 4 2 roll gsave		tr _psf		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll gsave		trj _pjsf		grestore 3 1 roll moveto tr jsp	} ddef} def/i0{	/Tx	{		tr sp	} ddef	/Tj	{		trj jsp	} ddef} def/i1{	W N} def/o0{	/Tx	{		tr sw rmoveto	} ddef	/Tj	{		trj swj rmoveto	} ddef} def/r0{	/Tx	{		tr _ctm _pss	} ddef	/Tj	{		trj _ctm _pjss	} ddef} def/r1{	/Tx	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		tr _ctm _pss		grestore 3 1 roll moveto tr sp	} ddef	/Tj	{		dup currentpoint 4 2 roll currentpoint gsave newpath moveto		trj _ctm _pjss		grestore 3 1 roll moveto tr jsp	} ddef} def/To{	pop _ctm currentmatrix pop} def/TO{	iTe _ctm setmatrix newpath} def/Tp{	pop _tm astore pop _ctm setmatrix	_tDict begin	/W	{	} def	/h	{	} def} def/TP{ end	iTm 0 0 moveto} def/Tr{	_render 3 le	{		currentpoint newpath moveto	} if	dup 8 eq	{		pop 0	}	{		dup 9 eq		{			pop 1		} if	} ifelse	dup /_render exch ddef	_renderStart exch get load exec} def/iTm{	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale} def/Tm{	_tm astore pop iTm 0 0 moveto} def/Td{	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto} def/iTe{	_render -1 eq	{	}	{		_renderEnd _render get dup null ne		{			load exec		}		{			pop		} ifelse	} ifelse	/_render -1 ddef} def/Ta{	pop} def/Tf{	dup 1000 div /_fScl exch ddef%	selectfont} def/Tl{	pop	0 exch _leading astore pop} def/Tt{	pop} def/TW{	3 npop} def/Tw{	/_cx exch ddef} def/TC{	3 npop} def/Tc{	/_ax exch ddef} def/Ts{	/_rise exch ddef	currentpoint	iTm	moveto} def/Ti{	3 npop} def/Tz{	100 div /_hs exch ddef	iTm} def/TA{	pop} def/Tq{	pop} def/Th{	pop pop pop pop pop} def/TX{	pop} def/Tk{	exch pop _fScl mul neg 0 rmoveto} def/TK{	2 npop} def/T*{	_leading aload pop neg Td} def/T*-{	_leading aload pop Td} def/T-{	_ax neg 0 rmoveto	_hyphen Tx} def/T+{} def/TR{	_ctm currentmatrix pop	_tm astore pop	iTm 0 0 moveto} def/TS{	currentfont 3 1 roll	/_Symbol_ _fScl 1000 mul selectfont		0 eq	{		Tx	}	{		Tj	} ifelse	setfont} def/Xb{	pop pop} def/Tb /Xb load def/Xe{	pop pop pop pop} def/Te /Xe load def/XB{} def/TB /XB load defcurrentdict readonly popendsetpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.0 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 17 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin		/initialize	{ 		Adobe_ColorImage_AI6 begin		Adobe_ColorImage_AI6		{			dup type /arraytype eq			{				dup xcheck				{					bind				} if			} if			pop pop		} forall	} def	/terminate { end } def		currentdict /Adobe_ColorImage_AI6_Vars known not	{		/Adobe_ColorImage_AI6_Vars 14 dict def	} if		Adobe_ColorImage_AI6_Vars begin		/channelcount 0 def		/sourcecount 0 def		/sourcearray 4 array def		/plateindex -1 def		/XIMask 0 def		/XIBinary 0 def		/XIChannelCount 0 def		/XIBitsPerPixel 0 def		/XIImageHeight 0 def		/XIImageWidth 0 def		/XIImageMatrix null def		/XIBuffer null def		/XIDataProc null def end		/WalkRGBString null def	/WalkCMYKString null def		/StuffRGBIntoGrayString null def	/RGBToGrayImageProc null def	/StuffCMYKIntoGrayString null def	/CMYKToGrayImageProc null def	/ColorImageCompositeEmulator null def		/SeparateCMYKImageProc null def		/FourEqual null def	/TestPlateIndex null def		currentdict /_colorimage known not	{		/colorimage where		{			/colorimage get /_colorimage exch def		}		{			/_colorimage null def		} ifelse	} if		/_currenttransfer systemdict /currenttransfer get def		/colorimage null def	/XI null def			/WalkRGBString	{		0 3 index			dup length 1 sub 0 3 3 -1 roll		{			3 getinterval { } forall				5 index exec				3 index		} for				 5 { pop } repeat		} def			/WalkCMYKString	{		0 3 index			dup length 1 sub 0 4 3 -1 roll		{			4 getinterval { } forall						6 index exec						3 index					} for				5 { pop } repeat			} def			/StuffRGBIntoGrayString	{		.11 mul exch				.59 mul add exch				.3 mul add				cvi 3 copy put				pop 1 add	} def			/RGBToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin 			sourcearray 0 get exec			dup length 3 idiv string			dup 3 1 roll 						/StuffRGBIntoGrayString load exch			WalkRGBString	 end	} def			/StuffCMYKIntoGrayString	{		exch .11 mul add				exch .59 mul add				exch .3 mul add				dup 255 gt { pop 255 } if				255 exch sub cvi 3 copy put				pop 1 add	} def			/CMYKToGrayImageProc	{			Adobe_ColorImage_AI6_Vars begin			sourcearray 0 get exec			dup length 4 idiv string			dup 3 1 roll 						/StuffCMYKIntoGrayString load exch			WalkCMYKString	 end	} def			/ColorImageCompositeEmulator	{		pop true eq		{			Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat		}		{			Adobe_ColorImage_AI6_Vars /channelcount get 1 ne			{				Adobe_ColorImage_AI6_Vars begin					sourcearray 0 3 -1 roll put									channelcount 3 eq 					{ 						/RGBToGrayImageProc 					}					{ 						/CMYKToGrayImageProc					} ifelse					load			 end			} if			image		} ifelse	} def			/SeparateCMYKImageProc	{			Adobe_ColorImage_AI6_Vars begin				sourcecount 0 ne			{				sourcearray plateindex get exec			}			{							sourcearray 0 get exec								dup length 4 idiv string								0 2 index								plateindex 4 2 index length 1 sub				{					get 255 exch sub										3 copy put pop 1 add										2 index				} for					pop pop exch pop			} ifelse	 end	} def				/FourEqual	{		4 index ne		{			pop pop pop false		}		{			4 index ne			{				pop pop false			}			{				4 index ne				{					pop false				}				{					4 index eq				} ifelse			} ifelse		} ifelse	} def			/TestPlateIndex	{		Adobe_ColorImage_AI6_Vars begin			/plateindex -1 def				/setcmykcolor where			{				pop				gsave				1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub				0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub				grestore					1 0 0 0 FourEqual 				{ 					/plateindex 0 def				}				{					0 1 0 0 FourEqual					{ 						/plateindex 1 def					}					{						0 0 1 0 FourEqual						{							/plateindex 2 def						}						{							0 0 0 1 FourEqual							{ 								/plateindex 3 def							}							{								0 0 0 0 FourEqual								{									/plateindex 5 def								} if							} ifelse						} ifelse					} ifelse				} ifelse				pop pop pop pop			} if			plateindex	 end	} def			/colorimage	{		Adobe_ColorImage_AI6_Vars begin			/channelcount 1 index def			/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def				4 sourcecount add index dup 			8 eq exch 1 eq or not	 end				{			/_colorimage load null ne			{				_colorimage			}			{				Adobe_ColorImage_AI6_Vars /sourcecount get				7 add { pop } repeat			} ifelse		}		{			dup 3 eq			TestPlateIndex			dup -1 eq exch 5 eq or or			{				/_colorimage load null eq				{					ColorImageCompositeEmulator				}				{					dup 1 eq					{						pop pop image					}					{						Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							gsave														0 _currenttransfer exec							1 _currenttransfer exec							eq							{ 0 _currenttransfer exec 0.5 lt }							{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse														{ { pop 0 } } { { pop 1 } } ifelse							systemdict /settransfer get exec						} if												_colorimage												Adobe_ColorImage_AI6_Vars /plateindex get 5 eq						{							grestore						} if					} ifelse				} ifelse			}			{				dup 1 eq				{					pop pop					image				}				{					pop pop						Adobe_ColorImage_AI6_Vars begin						sourcecount -1 0						{										exch sourcearray 3 1 roll put						} for							/SeparateCMYKImageProc load				 end						systemdict /image get exec				} ifelse			} ifelse		} ifelse	} def		/XI	{		Adobe_ColorImage_AI6_Vars begin			gsave			/XIMask exch 0 ne def			/XIBinary exch 0 ne def			pop			pop			/XIChannelCount exch def			/XIBitsPerPixel exch def			/XIImageHeight exch def			/XIImageWidth exch def			pop pop pop pop			/XIImageMatrix exch def						XIBitsPerPixel 1 eq			{				XIImageWidth 8 div ceiling cvi			}			{				XIImageWidth XIChannelCount mul			} ifelse			/XIBuffer exch string def						XIBinary			{				/XIDataProc { currentfile XIBuffer readstring pop } def				currentfile 128 string readline pop pop			}			{				/XIDataProc { currentfile XIBuffer readhexstring pop } def			} ifelse						0 0 moveto			XIImageMatrix concat			XIImageWidth XIImageHeight scale						XIMask			{				XIImageWidth XIImageHeight				false				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								/_lp /null ddef				_fc				/_lp /imagemask ddef								imagemask			}			{				XIImageWidth XIImageHeight				XIBitsPerPixel				[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]				/XIDataProc load								XIChannelCount 1 eq				{										gsave					0 setgray										image										grestore				}				{					false					XIChannelCount					colorimage				} ifelse			} ifelse			grestore	 end	} def	end%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)%%Version: 1.1 %%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1994 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 81 dict dup beginput/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_rise 0 def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fScl 0 def/_cnt 0 def/_hs 1 def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_wv 0 def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 91 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/sw{	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add} def/swj{	dup 4 1 roll	dup length exch stringwidth	exch 5 -1 roll 3 index mul add	4 1 roll 3 1 roll mul add	6 2 roll /_cnt 0 ddef	{		1 index eq		{			/_cnt _cnt 1 add ddef		} if	} forall	pop	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop} def/ss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put pop		gsave		false charpath currentpoint		4 index setmatrix		stroke		grestore		moveto		2 copy rmoveto	} exch cshow	3 npop} def/jss{	4 1 roll	{		2 npop		(0) exch 2 copy 0 exch put		gsave		_sp eq		{			exch 6 index 6 index 6 index 5 -1 roll widthshow			currentpoint		}		{			false charpath currentpoint			4 index setmatrix stroke		} ifelse		grestore		moveto		2 copy rmoveto	} exch cshow	6 npop} def/sp{	{		2 npop (0) exch		2 copy 0 exch put pop		false charpath		2 copy rmoveto	} exch cshow	2 npop} def/jsp{	{		2 npop		(0) exch 2 copy 0 exch put		_sp eq		{			exch 5 index 5 index 5 index 5 -1 roll widthshow		}		{			false charpath		} ifelse		2 copy rmoveto	} exch cshow	5 npop} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		ashow	} ddef	/_pjsf	{		_fc		awidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer readline not		{		stop		} if		endString eq		{			cleartomark stop		} if	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer readline not		{		stop		} if		dup beginString eq		{			pop /layerCnt dup load 1 add store		}		{			endString eq			{				layerCnt 1 eq				{					cleartomark stop				}				{					/layerCnt dup load 1 sub store				} ifelse			} if		} ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	4 npop	6 1 roll	pop	4 1 roll	pop pop pop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 3 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popendendsetpacking%%EndResource%%EndProlog%%BeginSetup%%IncludeFont: Helvetica-LightAdobe_level2_AI5 /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get execAdobe_ColorImage_AI6 /initialize get execAdobe_Illustrator_AI5 /initialize get exec[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef/guillemotleft/guillemotright/ellipsis/.notdef/Agrave/Atilde/Otilde/OE/oe/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caronTE%AI3_BeginEncoding: _Helvetica-Light Helvetica-Light[/_Helvetica-Light/Helvetica-Light 0 0 1 TZ%AI3_EndEncoding AdobeType%AI5_Begin_NonPrintingNp4 Bn%AI5_BeginGradient: (Black & White)(Black & White) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 50 100 %_Bs1 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Rainbow)(Rainbow) 0 6 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>1001 %_Br1<0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>001 %_Br1<00000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202020202020202020202020202020202020202020203030303030303030303030303030303030303030303030303030303030303030303030304040404040404040404040404040404040404040404040404040404040404040404040405050505050505050505050505050505050505050505050505050505050505050505050506060606060606060606060606060606060606060606060606060606060606060606060607070707070707070707070707070707070707070707><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>01 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0101 %_Br0<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>101 %_Br[0 1 0 0 1 50 100 %_Bs1 1 0 0 1 50 80 %_Bs1 0.0279 0 0 1 50 60 %_Bs1 0 1 0 1 50 40 %_Bs0 0 1 0 1 50 20 %_Bs0 1 1 0 1 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Steel Bar)(Steel Bar) 0 3 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br<000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF>0 %_Br[0 0 50 100 %_Bs1 0 50 70 %_Bs0 0 50 0 %_BsBD%AI5_EndGradient%AI5_BeginGradient: (Yellow & Orange Radial)(Yellow & Orange Radial) 1 2 Bd[0<0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEBEBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E5>01 %_Br[0 0 1 0 1 52 19 %_Bs0 0.55 0.9 0 1 50 100 %_BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_BeginPalette0 25 PbPnPc1 gPc0 gPc0 0 0 0 kPc0.75 gPc0.5 gPc0.25 gPc0 gPcBb2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0 0 0 kPc0.5 0 0 0 kPc0.75 0 0 0 kPc1 0 0 0 kPc0.25 0.25 0 0 kPc0.5 0.5 0 0 kPc0.75 0.75 0 0 kPc1 1 0 0 kPc0 0 0 0 kPc0 0.25 0 0 kPc0 0.5 0 0 kPc0 0.75 0 0 kPc0 1 0 0 kPc0 0.25 0.25 0 kPc0 0.5 0.5 0 kPc0 0.75 0.75 0 kPc0 1 1 0 kPc0 0 0 0 kPc0 0 0.25 0 kPc0 0 0.5 0 kPc0 0 0.75 0 kPc0 0 1 0 kPc0.25 0 0.25 0 kPc0.5 0 0.5 0 kPc0.75 0 0.75 0 kPc1 0 1 0 kPcBb2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.25 0.125 0 0 kPc0.5 0.25 0 0 kPc0.75 0.375 0 0 kPc1 0.5 0 0 kPc0.125 0.25 0 0 kPc0.25 0.5 0 0 kPc0.375 0.75 0 0 kPc0.5 1 0 0 kPcBb2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0 0.25 0.125 0 kPc0 0.5 0.25 0 kPc0 0.75 0.375 0 kPc0 1 0.5 0 kPc0 0.125 0.25 0 kPc0 0.25 0.5 0 kPc0 0.375 0.75 0 kPc0 0.5 1 0 kPc0 0 0 0 kPc0.125 0 0.25 0 kPc0.25 0 0.5 0 kPc0.375 0 0.75 0 kPc0.5 0 1 0 kPc0.25 0 0.125 0 kPc0.5 0 0.25 0 kPc0.75 0 0.375 0 kPc1 0 0.5 0 kPc0 0 0 0 kPc0.25 0.125 0.125 0 kPc0.5 0.25 0.25 0 kPc0.75 0.375 0.375 0 kPc1 0.5 0.5 0 kPc0.25 0.25 0.125 0 kPc0.5 0.5 0.25 0 kPc0.75 0.75 0.375 0 kPc1 1 0.5 0 kPcBb0 0 0 0 Bh2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg0 BBPc0.125 0.25 0.125 0 kPc0.25 0.5 0.25 0 kPc0.375 0.75 0.375 0 kPc0.5 1 0.5 0 kPc0.125 0.25 0.25 0 kPc0.25 0.5 0.5 0 kPc0.375 0.75 0.75 0 kPc0.5 1 1 0 kPc0 0 0 0 kPc0.125 0.125 0.25 0 kPc0.25 0.25 0.5 0 kPc0.375 0.375 0.75 0 kPc0.5 0.5 1 0 kPc0.25 0.125 0.25 0 kPc0.5 0.25 0.5 0 kPc0.75 0.375 0.75 0 kPc1 0.5 1 0 kPcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 0 79 128 255 Lb(Layer 1) Ln0 A0 R0 G300 Ar0 J 0 j 0.3 w 10 M []0 d%AI3_Note:0 D310.2656 460.8557 m310.0256 460.8557 lS310.2656 499.2557 m310.0256 499.2557 lS310.2656 464.4557 m310.2656 475.9757 lS310.2656 495.6556 m310.2656 484.1357 lS0 O0 g4 M309.7856 464.4557 m310.9856 464.4557 l310.2656 460.8557 l309.7856 464.4557 lb309.7856 495.6556 m310.9856 495.6556 l310.2656 499.2557 l309.7856 495.6556 lb10 M310.2656 460.8557 m310.2656 460.8557 lS310.2656 499.2557 m310.2656 499.2557 l310.2656 499.2557 ls0 O0 g4 M205.5956 409.7057 m206.5556 408.7457 l208.4756 411.6257 l205.5956 409.7057 lb0.8 w 10 M452.3606 305.5757 m169.4356 305.5757 lS470.3456 296.6957 m151.3856 296.6957 lS0.3 w186.1856 425.3357 m186.6656 425.5757 lS345.7856 473.8157 m345.7856 492.5357 lS310.2656 492.2956 m319.8656 492.2956 lS345.7856 492.2956 m336.1856 492.2956 lS310.6555 492.404 m310.6555 492.5262 310.5563 492.6253 310.434 492.6253 c310.3117 492.6253 310.2125 492.5262 310.2125 492.404 c310.2125 492.2818 310.3117 492.1826 310.434 492.1826 c310.5563 492.1826 310.6555 492.2818 310.6555 492.404 c310.6555 492.404 ls345.6557 492.404 m345.6557 492.2818 345.7549 492.1826 345.8772 492.1826 c345.9995 492.1826 346.0987 492.2818 346.0987 492.404 c346.0987 492.5262 345.9995 492.6253 345.8772 492.6253 c345.7549 492.6253 345.6557 492.5262 345.6557 492.404 c345.6557 492.404 ls310.2656 473.8157 m310.2656 473.8157 lS345.7856 473.8157 m345.7856 473.8157 lS345.7856 492.2956 m345.7856 492.2956 lS0.8 w469.6562 425.5757 m150.9951 425.5757 lS469.6562 460.8557 m150.9951 460.8557 lS169.1231 296.6957 mS151.3631 296.6957 m169.1231 305.5757 lS213.5456 305.5757 m213.5456 296.6957 lS185.9206 305.5757 m185.9206 296.6957 lS151.3631 296.6957 mS169.1706 305.3257 mS231.3056 305.5757 m231.3056 296.6957 lS259.2189 305.729 m259.2189 296.849 lS241.6989 305.729 m241.6989 296.849 lS319.1456 305.5757 m319.1456 296.6957 lS301.3856 305.5757 m301.3856 296.6957 lS0.3 w191.8656 396.5157 m206.0756 409.2257 lS186.1856 473.8157 m186.1856 492.5357 lS186.1856 492.2956 m189.7856 492.2956 lS147.3056 492.2956 m143.7056 492.2956 lS186.1856 492.2956 m184.7456 492.2956 lS186.6044 492.404 m186.6044 492.5262 186.5051 492.6253 186.3828 492.6253 c186.2606 492.6253 186.1613 492.5262 186.1613 492.404 c186.1613 492.2818 186.2606 492.1826 186.3828 492.1826 c186.5051 492.1826 186.6044 492.2818 186.6044 492.404 c186.6044 492.404 ls0 O0 g4 M147.3056 492.7756 m147.3056 491.8157 l150.9056 492.2956 l147.3056 492.7756 lb10 M186.1856 473.8157 m186.1856 473.8157 lS150.9056 492.2956 m150.9056 492.2956 lS186.1856 473.8157 m186.1856 492.5357 lS221.7056 473.8157 m221.7056 492.5357 lS186.1856 492.2956 m195.7856 492.2956 lS221.7056 492.2956 m212.1056 492.2956 lS186.6044 492.404 m186.6044 492.5262 186.5051 492.6253 186.3828 492.6253 c186.2606 492.6253 186.1613 492.5262 186.1613 492.404 c186.1613 492.2818 186.2606 492.1826 186.3828 492.1826 c186.5051 492.1826 186.6044 492.2818 186.6044 492.404 c186.6044 492.404 ls221.6045 492.404 m221.6045 492.2818 221.7038 492.1826 221.826 492.1826 c221.9483 492.1826 222.0475 492.2818 222.0475 492.404 c222.0475 492.5262 221.9483 492.6253 221.826 492.6253 c221.7038 492.6253 221.6045 492.5262 221.6045 492.404 c221.6045 492.404 ls186.1856 473.8157 m186.1856 473.8157 lS221.7056 473.8157 m221.7056 473.8157 lS221.7056 492.2956 m221.7056 492.2956 lS0.8 w150.9951 425.5757 m150.9951 460.8557 lS0.3 w186.1856 460.8557 m186.1856 425.5757 lS221.7056 473.8157 m221.7056 492.5357 lS274.7456 473.8157 m274.7456 492.5357 lS221.7056 492.2956 m240.1856 492.2956 lS274.7456 492.2956 m256.2656 492.2956 lS222.0476 492.404 m222.0476 492.5262 221.9483 492.6253 221.826 492.6253 c221.7038 492.6253 221.6045 492.5262 221.6045 492.404 c221.6045 492.2818 221.7038 492.1826 221.826 492.1826 c221.9483 492.1826 222.0476 492.2818 222.0476 492.404 c222.0476 492.404 ls274.7693 492.404 m274.7693 492.2818 274.8685 492.1826 274.9908 492.1826 c275.1131 492.1826 275.2123 492.2818 275.2123 492.404 c275.2123 492.5262 275.1131 492.6253 274.9908 492.6253 c274.8685 492.6253 274.7693 492.5262 274.7693 492.404 c274.7693 492.404 ls221.7056 473.5757 m221.7056 473.5757 lS274.7456 473.8157 m274.7456 473.8157 lS274.7456 492.2956 m274.7456 492.2956 lS274.7456 473.8157 m274.7456 492.5357 lS274.7456 492.2956 m284.5856 492.2956 lS310.2656 492.2956 m300.6656 492.2956 lS275.2124 492.404 m275.2124 492.5262 275.1131 492.6253 274.9908 492.6253 c274.8686 492.6253 274.7693 492.5262 274.7693 492.404 c274.7693 492.2818 274.8686 492.1826 274.9908 492.1826 c275.1131 492.1826 275.2124 492.2818 275.2124 492.404 c275.2124 492.404 ls310.2125 492.404 m310.2125 492.2818 310.3117 492.1826 310.434 492.1826 c310.5563 492.1826 310.6555 492.2818 310.6555 492.404 c310.6555 492.5262 310.5563 492.6253 310.434 492.6253 c310.3117 492.6253 310.2125 492.5262 310.2125 492.404 c310.2125 492.404 ls274.7456 473.8157 m274.7456 473.8157 lS310.2656 473.8157 m310.2656 473.8157 lS310.2656 492.2956 m310.2656 492.2956 lS0.8 w274.7456 460.8557 m274.7456 425.5757 lS310.2656 460.8557 m310.2656 425.5757 lS320.3456 519.4157 m300.1856 519.4157 l300.1856 499.2557 l320.3456 499.2557 l320.3456 519.4157 ls221.7056 460.8557 m186.1856 460.8557 l186.1856 425.5757 l221.7056 425.5757 l221.7056 460.8557 ls0.3 w486.6656 425.8157 m494.5856 425.8157 lS486.6656 415.2557 m494.5856 415.2557 lS494.3456 425.8157 m494.3456 415.2557 l494.3456 411.6557 lS494.4141 425.6612 m494.5364 425.6612 494.6356 425.7604 494.6356 425.8825 c494.6356 426.0048 494.5364 426.1039 494.4141 426.1039 c494.2918 426.1039 494.1926 426.0048 494.1926 425.8825 c494.1926 425.7604 494.2918 425.6612 494.4141 425.6612 c494.4141 425.6612 ls494.4141 415.4782 m494.2918 415.4782 494.1926 415.379 494.1926 415.2568 c494.1926 415.1346 494.2918 415.0354 494.4141 415.0354 c494.5364 415.0354 494.6356 415.1346 494.6356 415.2568 c494.6356 415.379 494.5364 415.4782 494.4141 415.4782 c494.4141 415.4782 ls486.6656 425.8157 m486.6656 425.8157 lS486.6656 415.2557 m486.6656 415.2557 lS494.3456 415.2557 m494.3456 415.2557 lS0.8 w379.0323 305.729 m379.0323 296.849 lS361.2723 305.729 m361.2723 296.849 lS389.4656 305.5757 m389.4656 296.6957 lS407.2256 305.5757 m407.2256 296.6957 lS434.1631 305.5757 m434.1631 296.6957 lS470.1681 296.6957 m452.4081 305.5757 lS0.3 w434.3456 473.8157 m434.3456 492.5357 lS434.3456 492.2956 m430.7456 492.2956 lS473.2256 492.2956 m476.8256 492.2956 lS434.3456 492.2956 m435.7856 492.2956 lS469.8656 492.2956 m468.4256 492.2956 lS434.2637 492.404 m434.2637 492.2818 434.3629 492.1826 434.4852 492.1826 c434.6075 492.1826 434.7067 492.2818 434.7067 492.404 c434.7067 492.5262 434.6075 492.6253 434.4852 492.6253 c434.3629 492.6253 434.2637 492.5262 434.2637 492.404 c434.2637 492.404 ls0 O0 g4 M473.2256 492.7756 m473.2256 491.8157 l469.8656 492.2956 l473.2256 492.7756 lb10 M434.3456 473.8157 m434.3456 473.8157 lS469.8656 492.2956 m469.8656 492.2956 lS345.7856 473.8157 m345.7856 492.5357 lS398.8256 473.8157 m398.8256 492.5357 lS345.7856 492.2956 m364.2656 492.2956 lS398.8256 492.2956 m380.3456 492.2956 lS346.0988 492.404 m346.0988 492.5262 345.9995 492.6253 345.8773 492.6253 c345.7549 492.6253 345.6557 492.5262 345.6557 492.404 c345.6557 492.2818 345.7549 492.1826 345.8773 492.1826 c345.9995 492.1826 346.0988 492.2818 346.0988 492.404 c346.0988 492.404 ls398.8205 492.404 m398.8205 492.2818 398.9197 492.1826 399.042 492.1826 c399.1643 492.1826 399.2635 492.2818 399.2635 492.404 c399.2635 492.5262 399.1643 492.6253 399.042 492.6253 c398.9197 492.6253 398.8205 492.5262 398.8205 492.404 c398.8205 492.404 ls345.7856 473.5757 m345.7856 473.5757 lS398.8256 473.8157 m398.8256 473.8157 lS398.8256 492.2956 m398.8256 492.2956 lS398.8256 473.8157 m398.8256 492.5357 lS434.3456 473.8157 m434.3456 492.5357 lS398.8256 492.2956 m408.4256 492.2956 lS434.3456 492.2956 m424.7456 492.2956 lS399.2635 492.404 m399.2635 492.5262 399.1643 492.6253 399.042 492.6253 c398.9197 492.6253 398.8205 492.5262 398.8205 492.404 c398.8205 492.2818 398.9197 492.1826 399.042 492.1826 c399.1643 492.1826 399.2635 492.2818 399.2635 492.404 c399.2635 492.404 ls434.2637 492.404 m434.2637 492.2818 434.3629 492.1826 434.4852 492.1826 c434.6075 492.1826 434.7067 492.2818 434.7067 492.404 c434.7067 492.5262 434.6075 492.6253 434.4852 492.6253 c434.3629 492.6253 434.2637 492.5262 434.2637 492.404 c434.2637 492.404 ls398.8256 473.8157 m398.8256 473.8157 lS434.3456 473.8157 m434.3456 473.8157 lS434.3456 492.2956 m434.3456 492.2956 lS0.8 w345.7856 460.8557 m345.7856 425.5757 lS0.3 w433.1456 425.5757 m434.3456 426.7757 lS0.8 w469.6562 425.5757 m469.6562 460.8557 lSuq*u800 Ar1 w 4 M469.4468 460.8557 m469.4468 471.6557 L151.0844 471.6557 L151.0844 460.8557 L186.1856 460.8557 L186.1856 425.5757 L151.0844 425.5757 L151.0844 414.7758 L469.4468 414.7758 L469.4468 425.5757 L434.3456 425.5757 L434.3456 460.8557 L469.4468 460.8557 LhWn398.8256 425.5757 m221.7056 425.5757 L221.7056 460.8557 L398.8256 460.8557 L398.8256 425.5757 LhWn*Uu0 R0 G0.3 w 10 M122.8072 416.0261 m323.6405 616.8594 lS124.8472 413.9861 m325.6805 614.8195 lS120.7672 418.0661 m321.6006 618.8994 lS118.7272 420.1061 m319.5606 620.9394 lS116.6872 422.1461 m317.5206 622.9794 lS114.6472 424.1861 m315.4806 625.0194 lS112.6072 426.2261 m313.4406 627.0594 lS110.5672 428.2661 m311.4006 629.0994 lS126.8872 411.9461 m327.7205 612.7795 lS128.9272 409.9061 m329.7605 610.7395 lS130.9672 407.8661 m331.8005 608.6995 lS133.0072 405.8262 m333.8405 606.6595 lS135.0471 403.7862 m335.8805 604.6195 lS137.0871 401.7462 m337.9205 602.5795 lS139.1271 399.7062 m339.9605 600.5395 lS141.1671 397.6662 m342.0005 598.4995 lS143.2071 395.6262 m344.0404 596.4595 lS145.2471 393.5862 m346.0804 594.4196 lS147.2871 391.5462 m348.1204 592.3796 lS149.3271 389.5062 m350.1604 590.3396 lS151.3671 387.4662 m352.2004 588.2996 lS153.4071 385.4263 m354.2404 586.2596 lS155.447 383.3863 m356.2804 584.2196 lS157.487 381.3463 m358.3204 582.1796 lS159.527 379.3063 m360.3604 580.1396 lS161.567 377.2663 m362.4004 578.0996 lS163.607 375.2263 m364.4403 576.0596 lS165.647 373.1863 m366.4803 574.0196 lS167.687 371.1463 m368.5203 571.9797 lS169.727 369.1063 m370.5603 569.9397 lS171.767 367.0663 m372.6003 567.8997 lS173.807 365.0263 m374.6403 565.8597 lS175.847 362.9864 m376.6803 563.8197 lS177.8869 360.9464 m378.7203 561.7797 lS179.9269 358.9064 m380.7603 559.7397 lS181.9669 356.8664 m382.8003 557.6997 lS184.0069 354.8264 m384.8403 555.6597 lS186.0469 352.7864 m386.8803 553.6197 lS188.0869 350.7464 m388.9202 551.5798 lS190.1269 348.7064 m390.9602 549.5398 lS192.1669 346.6664 m393.0002 547.4998 lS194.2069 344.6264 m395.0402 545.4598 lS196.2469 342.5864 m397.0802 543.4198 lS198.2868 340.5465 m399.1202 541.3798 lS200.3268 338.5065 m401.1602 539.3398 lS202.3668 336.4665 m403.2002 537.2998 lS204.4068 334.4265 m405.2402 535.2598 lS206.4468 332.3865 m407.2802 533.2198 lS208.4868 330.3465 m409.3202 531.1798 lS210.5268 328.3065 m411.3601 529.1399 lS212.5668 326.2665 m413.4001 527.0999 lS214.6068 324.2265 m415.4401 525.0599 lS216.6468 322.1865 m417.4801 523.0199 lS218.6868 320.1465 m419.5201 520.9799 lS220.7268 318.1065 m421.5601 518.9399 lS222.7667 316.0666 m423.6001 516.8999 lS224.8067 314.0266 m425.6401 514.8599 lS226.8467 311.9866 m427.6801 512.8199 lS228.8867 309.9466 m429.7201 510.7799 lS230.9267 307.9066 m431.7601 508.7399 lS232.9667 305.8666 m433.8 506.7 lS235.0067 303.8266 m435.84 504.66 lS237.0467 301.7866 m437.88 502.62 lS239.0867 299.7466 m439.92 500.58 lS241.1267 297.7066 m441.96 498.54 lS243.1667 295.6667 m444 496.5 lS245.2066 293.6267 m446.04 494.46 lS247.2466 291.5867 m448.08 492.42 lS249.2866 289.5467 m450.12 490.38 lS251.3266 287.5067 m452.16 488.34 lS253.3666 285.4667 m454.1999 486.3 lS255.4066 283.4267 m456.2399 484.2601 lS257.4466 281.3867 m458.2799 482.2201 lS259.4866 279.3467 m460.3199 480.1801 lS261.5266 277.3067 m462.3599 478.1401 lS263.5666 275.2667 m464.3999 476.1001 lS265.6065 273.2268 m466.4399 474.0601 lS267.6465 271.1868 m468.4799 472.0201 lS269.6865 269.1468 m470.5199 469.9801 lS271.7265 267.1068 m472.5599 467.9401 lS273.7665 265.0668 m474.5998 465.9001 lS275.8065 263.0268 m476.6398 463.8601 lS277.8465 260.9868 m478.6798 461.8202 lS279.8865 258.9468 m480.7198 459.7802 lS281.9265 256.9068 m482.7598 457.7402 lS283.9665 254.8668 m484.7998 455.7002 lS286.0065 252.8269 m486.8398 453.6602 lS288.0464 250.7869 m488.8798 451.6202 lS290.0864 248.7469 m490.9198 449.5802 lS292.1264 246.7069 m492.9598 447.5402 lS294.1664 244.6669 m494.9998 445.5002 lS296.2064 242.6269 m497.0397 443.4602 lS298.2464 240.5869 m499.0797 441.4203 lS300.2864 238.5469 m501.1197 439.3803 lS302.3264 236.5069 m503.1597 437.3403 lSUQU0 A1 Ap0 R0 G800 Ar0 J 0 j 0.8 w 10 M []0 d%AI3_Note:0 D469.6562 460.8557 m469.6562 471.6557 L150.9951 471.6557 L150.9951 460.8557 L469.6562 460.8557 Ls469.6562 414.7757 m469.6562 425.5757 L150.9951 425.5757 L150.9951 414.7757 L469.6562 414.7757 Ls221.7056 425.5757 m221.7056 460.8557 L186.1856 460.8557 L186.1856 425.5757 L221.7056 425.5757 Ls434.3456 425.5757 m434.3456 460.8557 L398.8256 460.8557 L398.8256 425.5757 L434.3456 425.5757 Ls0 Ap300 Ar0.3 w398.8256 460.8557 m398.8256 425.5757 lS486.6656 461.0957 m494.5856 461.0957 lS486.6656 471.8957 m494.5856 471.8957 lS494.3456 461.0957 m494.3456 471.8957 l494.3456 475.2557 lS494.4141 461.5231 m494.2918 461.5231 494.1926 461.424 494.1926 461.3017 c494.1926 461.1795 494.2918 461.0804 494.4141 461.0804 c494.5364 461.0804 494.6356 461.1795 494.6356 461.3017 c494.6356 461.424 494.5364 461.5231 494.4141 461.5231 c494.4141 461.5231 ls494.4141 471.7062 m494.5364 471.7062 494.6356 471.8053 494.6356 471.9275 c494.6356 472.0497 494.5364 472.1489 494.4141 472.1489 c494.2918 472.1489 494.1926 472.0497 494.1926 471.9275 c494.1926 471.8053 494.2918 471.7062 494.4141 471.7062 c494.4141 471.7062 ls486.6656 461.0957 m486.6656 461.0957 lS486.6656 471.8957 m486.6656 471.8957 lS494.3456 471.8957 m494.3456 471.8957 lS485.4656 461.0957 m494.5856 461.0957 lS485.4656 425.8157 m494.5856 425.8157 lS494.3456 461.0957 m494.3456 464.6957 lS494.3456 425.8157 m494.3456 422.2157 lS494.3456 461.0957 m494.3456 459.6557 lS494.3456 425.8157 m494.3456 427.2557 lS494.4141 461.5231 m494.2918 461.5231 494.1926 461.424 494.1926 461.3017 c494.1926 461.1795 494.2918 461.0804 494.4141 461.0804 c494.5364 461.0804 494.6356 461.1795 494.6356 461.3017 c494.6356 461.424 494.5364 461.5231 494.4141 461.5231 c494.4141 461.5231 ls494.4141 425.6612 m494.5364 425.6612 494.6356 425.7604 494.6356 425.8825 c494.6356 426.0048 494.5364 426.1039 494.4141 426.1039 c494.2918 426.1039 494.1926 426.0048 494.1926 425.8825 c494.1926 425.7604 494.2918 425.6612 494.4141 425.6612 c494.4141 425.6612 ls485.2256 461.0957 m485.2256 461.0957 lS485.2256 425.8157 m485.2256 425.8157 lS494.3456 425.8157 m494.3456 425.8157 lS486.6656 415.2557 m485.2256 415.2557 lS486.6656 471.8957 m485.2256 471.8957 lS0.8 w398.8256 460.8557 m434.3456 460.8557 l434.3456 425.5757 l398.8256 425.5757 l398.8256 460.8557 ls0 To1 0 0 1 310.3656 507.5157 0 TpTP-2.3345 0 Td0 Tr0 O0 g800 Ar1 w 4 M/_Helvetica-Light 7 Tf0 Ts100 Tz0 Tt0 TA%_ 0 XL36 0 XbXB0 0 5 TC100 100 200 TW0 0 0 Ti1 Ta0 0 2 2 3 Th0 Tq0 0 Tl0 Tc0 Tw(A) Tx (\r) TX TO0 To1 0 0 1 328.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr/_Helvetica-Light 6 Tf(2 m) Tx (\r) TX TO0 To1 0 0 1 371.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr(3 m) Tx (\r) TX TO0 To1 0 0 1 416.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr(2 m) Tx (\r) TX TO0 To1 0 0 1 451.8656 490.0157 0 TpTP-13.3367 0 Td0 Tr(1.5 to 2 m) Tx (\r) TX TO0 To1 0 0 1 310.3656 477.5157 0 TpTP-2.9147 0 Td0 Tr/_Helvetica-Light 7 Tf(M) Tx (\r) TX TO0 To1 0 0 1 292.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr/_Helvetica-Light 6 Tf(2 m) Tx (\r) TX TO0 To1 0 0 1 247.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr(3 m) Tx (\r) TX TO0 To1 0 0 1 203.3656 490.0157 0 TpTP-4.9995 0 Td0 Tr(2 m) Tx (\r) TX TO0 To1 0 0 1 167.3656 490.0157 0 TpTP-13.3367 0 Td0 Tr(1.5 to 2 m) Tx (\r) TX TO1 Ap1 g0.8 w 10 M208.1667 439.9167 m208.1667 446.75 L201.3333 446.75 L201.3333 439.9167 L208.1667 439.9167 Lf418.9167 439.9167 m418.9167 446.75 L412.0833 446.75 L412.0833 439.9167 L418.9167 439.9167 Lf0 To1 0 0 1 204.8656 441.0157 0 TpTP-1.9457 0 Td0 Tr0 g1 w 4 M/_Helvetica-Light 7 Tf(L) Tx (\r) TX TO0 To1 0 0 1 444.3656 441.0157 0 TpTP-2.3345 0 Td0 Tr(R) Tx (\r) TX TO0 To1 0 0 1 415.6256 441.0157 0 TpTP-1.9457 0 Td0 Tr(L) Tx (\r) TX TO0 To1 0 0 1 186.8656 405.0157 0 TpTP-2.1379 0 Td0 Tr(E) Tx (\r) TX TO0 To1 0 0 1 221.6989 405.0157 0 TpTP-2.1379 0 Td0 Tr(S) Tx (\r) TX TO0 To1 0 0 1 275.0323 405.0157 0 TpTP-2.7224 0 Td0 Tr(G) Tx (\r) TX TO0 To1 0 0 1 434.0323 405.0157 0 TpTP-2.1379 0 Td0 Tr(E) Tx (\r) TX TO0 To1 0 0 1 399.6989 405.0157 0 TpTP-2.1379 0 Td0 Tr(S) Tx (\r) TX TO0 To1 0 0 1 346.3656 405.0157 0 TpTP-2.7224 0 Td0 Tr(G) Tx (\r) TX TO0 To1 0 0 1 310.6989 405.0157 0 TpTP-2.5267 0 Td0 Tr(C) Tx (\r) TX TO0 To1 0 0 1 169.6989 387.6824 0 TpTP-34.0027 0 Td0 Tr/_Helvetica-Light 6 Tf(Conductive safety border) Tx (\r) TX TO0 To0 1 -1 0 496.0323 443.5157 0 TpTP-13.3367 0 Td0 Tr(1.5 to 2 m) Tx (\r) TX TO0 To1 0 0 1 242.3656 387.0157 0 TpTP0 Tr0 Ta9 0 Tl(A   Table for electrical apparatus\011) Tx 108 0 Td(M   Minimum 1 m\r) Tx -108 -9 Td(C   Centre line\011\011) Tx 108 0 Td(L    Last 2 m of piste\r) Tx -108 -9 Td(G   On-guard lines\011\011) Tx 108 0 Td(E   End of piste \(rear limit\)\r) Tx -108 -9 Td(R   Run back \(extension of piste\)\011) Tx 108 0 Td(S   Start of 2 m signal area\r) Tx -108 -9 Td(\r) Tx TO0 To1 0 0 1 182.7738 341.8558 0 TpTP0 Tr0 0 Tl(For foil and \216p\216e the conductive surface must cover the whole of the length and ) Tx (breadth of the piste, \r) Tx 0 -7 Td(including its extensions \(run back\) and its safety borders \(cf. Article t.13s, m) Tx (.57\)) Tx (\r) TX TO0 To1 0 0 1 176.8656 441.0157 0 TpTP-2.3345 0 Td0 Tr/_Helvetica-Light 7 Tf1 Ta(R) Tx (\r) TX TO0 To1 0 0 1 369.8656 298.5157 0 TpTP-1.9457 0 Td0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 310.3656 298.5157 0 TpTP-1.9457 0 Td0 Tr(3) Tx (\r) TX TO0 To1 0 0 1 251.3656 298.5157 0 TpTP-1.9457 0 Td0 Tr(2) Tx (\r) TX TO0 To1 0 0 1 222.3656 298.5157 0 TpTP-1.9457 0 Td0 Tr(1) Tx (\r) TX TO0 To1 0 0 1 398.8656 298.5157 0 TpTP-1.9457 0 Td0 Tr(1) Tx (\r) TX TO0 To1 0 0 1 191.7738 282.3558 0 TpTP0 Tr/_Helvetica-Light 6 Tf0 Ta9 0 Tl(1   Lights registering hits      2   Names and nationalities of fencers      3  ) Tx ( Clock, score, etc.) Tx (\r) TX TO0 To0 1 -1 0 495.8656 396.5157 0 TpTP-9.1685 0 Td0 Tr1 Ta0 0 Tl(0.25 m) Tx (\r) TX TO0 To0 1 -1 0 495.7755 490.5157 0 TpTP-9.1685 0 Td0 Tr(0.25 m) Tx (\r) TX TO0 To1 0 0 1 345.3656 335.0157 0 TpTP0 Tr/_Helvetica-Light 7 Tf(\r) Tx TOLB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_ColorImage_AI6 /terminate get execAdobe_typography_AI5 /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF